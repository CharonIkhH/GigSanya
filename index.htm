<!DOCTYPE html>
<html lang="ru">
<head>
    <!-- Основные мета-теги -->
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=5">
    
    <!-- Главные SEO-теги -->
    <title>IT-аутсорсинг в Москве 2025 | Комплексная IT-поддержка 24/7 | GigSys</title>
    <meta name="description" content="Профессиональный IT-аутсорсинг бизнеса в Москве с гарантией SLA от 15 минут. Комплексная IT-поддержка 24/7, обслуживание серверов и компьютеров, защита от кибератак. Экономия до 40% на IT.">
    <meta name="keywords" content="IT-аутсорсинг, IT-поддержка 24/7, IT-обслуживание компаний, IT-аутсорсинг Москва цены, обслуживание серверов Windows, обслуживание компьютеров, поддержка пользователей, защищенный офис, IT-безопасность, удаленный мониторинг, резервное копирование">
    
    <!-- Canonical URL для предотвращения дублирования контента -->
    <link rel="canonical" href="https://gigsys.ru/">
    
    <!-- Meta Robots -->
    <meta name="robots" content="index, follow, max-snippet:-1, max-image-preview:large, max-video-preview:-1">
    
    <!-- Геолокация и контакты для поисковиков -->
    <meta name="geo.region" content="RU-MOW">
    <meta name="geo.placename" content="Москва">
    <meta name="geo.position" content="55.755826;37.6173">
    <meta name="ICBM" content="55.755826, 37.6173">
    
    <!-- Open Graph мета-теги для социальных сетей -->
    <meta property="og:locale" content="ru_RU">
    <meta property="og:type" content="website">
    <meta property="og:title" content="IT-аутсорсинг и IT-поддержка бизнеса в Москве | GigSys">
    <meta property="og:description" content="Профессиональный IT-аутсорсинг компаний в Москве с SLA от 15 минут и поддержкой 24/7. Защита от кибератак, обслуживание серверов, техподдержка пользователей.">
    <meta property="og:url" content="https://gigsys.ru/">
    <meta property="og:site_name" content="GigSys - IT-аутсорсинг в Москве">
    <meta property="og:image" content="https://gigsys.ru/assets/templates/img/og-image.jpg">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    
    <!-- Twitter Card мета-теги -->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:title" content="IT-аутсорсинг и IT-поддержка бизнеса в Москве | GigSys">
    <meta name="twitter:description" content="Профессиональный IT-аутсорсинг с SLA от 15 минут. Обслуживание IT-инфраструктуры под ключ.">
    <meta name="twitter:image" content="https://gigsys.ru/assets/templates/img/twitter-card.jpg">
    
    <!-- Дополнительные мета-теги -->
    <meta name="author" content="GigSys - IT-аутсорсинг">
    <meta name="application-name" content="GigSys">
    <meta name="format-detection" content="telephone=no">
    <meta name="theme-color" content="#2c64d3">
    
    <!-- Favicon - современная реализация -->
    <link rel="icon" href="assets/templates/img/favicon/favicon.ico" sizes="32x32">
    <link rel="icon" href="assets/templates/img/favicon/favicon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="assets/templates/img/favicon/apple-touch-icon.png">
    <link rel="manifest" href="assets/templates/img/favicon/site.webmanifest">
    <link rel="mask-icon" href="assets/templates/img/favicon/safari-pinned-tab.svg" color="#2c64d3">
    <meta name="msapplication-TileColor" content="#2c64d3">
    <meta name="msapplication-config" content="assets/templates/img/favicon/browserconfig.xml">
    
    <!-- Preloads для критических ресурсов -->
   
    <link rel="preload" href="assets/templates/css/main.css" as="style">
    <link rel="preload" href="assets/templates/js/index.js" as="script">
    
    <!-- Основные стили с атрибутами для оптимизации -->
    <link rel="stylesheet" href="assets/templates/libs/bootstrap4/bootstrap-grid.min.css" media="all">
    <link rel="stylesheet" href="assets/templates/libs/bootstrap4/bootstrap-reboot.min.css" media="all">
    <link rel="stylesheet" href="assets/templates/libs/animate/animate.css" media="all">
    <link rel="stylesheet" href="assets/templates/libs/magnific/magnific-popup.css" media="all">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.5.2/css/all.min.css" 
          integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" 
          crossorigin="anonymous"
          referrerpolicy="no-referrer">
    <link rel="stylesheet" href="assets/templates/css/fonts.css" media="all">
    <link rel="stylesheet" href="assets/templates/css/main.css" media="all">
    <link rel="stylesheet" href="assets/templates/css/gift.css" media="all">
    <link rel="stylesheet" href="assets/templates/css/root.css" media="all">
    <link rel="stylesheet" href="assets/templates/css/header.css" media="all">
    <script src="app.js"></script>
    <script src="amo-form.js"></script>
    <script src="amocrm_token.js"></script>
    <!-- Структурированные данные Organization и LocalBusiness в формате JSON-LD -->
    <script type="application/ld+json">
    {
      "@context": "https://schema.org",
      "@type": "LocalBusiness",
      "name": "GigSys - IT-аутсорсинг в Москве",
      "alternateName": "ГигСис",
      "description": "Профессиональный IT-аутсорсинг и IT-поддержка бизнеса в Москве. Обслуживание компьютеров, серверов и IT-инфраструктуры с SLA от 15 минут.",
      "url": "https://gigsys.ru/",
      "logo": "https://gigsys.ru/assets/templates/img/logo.svg",
      "image": "https://gigsys.ru/assets/templates/img/office-photo.jpg",
      "priceRange": "от 12000 ₽/мес",
      "telephone": "+8(499)350-11-60",
      "email": "info@gigsys.ru",
      "foundingDate": "2010",
      "address": {
        "@type": "PostalAddress",
        "streetAddress": "ул. Технологическая, 15",
        "addressLocality": "Москва",
        "postalCode": "123456",
        "addressCountry": "RU"
      },
      "geo": {
        "@type": "GeoCoordinates",
        "latitude": 55.755826,
        "longitude": 37.6173
      },
      "openingHoursSpecification": {
        "@type": "OpeningHoursSpecification",
        "dayOfWeek": [
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday"
        ],
        "opens": "09:00",
        "closes": "18:00"
      },
      "sameAs": [
        "https://vk.com/gigsys",
        "https://t.me/gigsys",
        "https://www.youtube.com/channel/gigsys"
      ],
      "hasOfferCatalog": {
        "@type": "OfferCatalog",
        "name": "IT-услуги для бизнеса",
        "itemListElement": [
          {
            "@type": "Offer",
            "itemOffered": {
              "@type": "Service",
              "name": "IT-аутсорсинг компаний в Москве",
              "description": "Комплексное обслуживание IT-инфраструктуры бизнеса с поддержкой 24/7 и гарантированным SLA",
              "url": "https://gigsys.ru/it-autsorsing"
            },
            "price": "12000",
            "priceCurrency": "RUB",
            "priceValidUntil": "2025-12-31"
          },
          {
            "@type": "Offer",
            "itemOffered": {
              "@type": "Service",
              "name": "Защищенный офис - комплексная IT-безопасность",
              "description": "Защита конфиденциальных данных компании от утечек, кибератак и внешних угроз",
              "url": "https://gigsys.ru/zashchishchennyj-ofis"
            },
            "price": "15000",
            "priceCurrency": "RUB",
            "priceValidUntil": "2025-12-31"
          },
          {
            "@type": "Offer",
            "itemOffered": {
              "@type": "Service",
              "name": "Обслуживание серверов Windows и Linux",
              "description": "Профессиональная настройка, мониторинг и администрирование серверов с отказоустойчивостью 99.9%",
              "url": "https://gigsys.ru/obsluzhivanie-serverov"
            },
            "price": "15000",
            "priceCurrency": "RUB",
            "priceValidUntil": "2025-12-31"
          }
        ]
      },
      "aggregateRating": {
        "@type": "AggregateRating",
        "ratingValue": "4.8",
        "bestRating": "5",
        "worstRating": "1",
        "ratingCount": "324"
      }
    }
    </script>
    
    <!-- Основной JS-файл с отложенной загрузкой -->
    <script src="assets/templates/js/index.js" defer></script>
  

</head>
    
   <!-- Предотвращение FOUC -->
<script>
    console.log("FOUC: Начало предотвращения мигания неоформленного контента");
    document.documentElement.classList.add('preload');
    console.log("FOUC: Добавлен класс 'preload' к document.documentElement");
    
    window.addEventListener('load', function() {
        console.log("FOUC: Событие 'load' сработало - страница полностью загружена");
        document.documentElement.classList.remove('preload');
        console.log("FOUC: Удален класс 'preload' - контент теперь виден");
    });
    
    // Дополнительный таймаут для безопасности
    setTimeout(function() {
        if (document.documentElement.classList.contains('preload')) {
            console.log("FOUC: Сработал резервный таймаут - принудительное удаление класса 'preload'");
            document.documentElement.classList.remove('preload');
        }
    }, 5000);
    
    console.log("FOUC: Скрипт предотвращения FOUC инициализирован");
</script>


        
    <noscript><div><img src="https://mc.yandex.ru/watch/92579917" style="position:absolute; left:-9999px;" alt=""></div></noscript>

    <!-- Отложенная загрузка reCAPTCHA -->
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const forms = document.querySelectorAll('form');
        let recaptchaLoaded = false;
        
        function loadRecaptcha() {
            if (!recaptchaLoaded) {
                const recaptchaScript = document.createElement('script');
                recaptchaScript.src = 'https://www.google.com/recaptcha/api.js';
                recaptchaScript.async = true;
                recaptchaScript.defer = true;
                document.head.appendChild(recaptchaScript);
                recaptchaLoaded = true;
            }
        }
        
        forms.forEach(function(form) {
            form.addEventListener('mouseenter', loadRecaptcha, {once: true});
            form.addEventListener('focusin', loadRecaptcha, {once: true});
        });
    });
    </script>
    
   <!-- Оптимизация CLS с использованием PerformanceObserver -->
<script>
    console.log("CLS мониторинг: Инициализация скрипта");
    
    if ('PerformanceObserver' in window) {
        console.log("CLS мониторинг: PerformanceObserver поддерживается в браузере");
        
        try {
            console.log("CLS мониторинг: Настройка наблюдения за Layout Shifts");
            // Отслеживание Layout Shifts
            new PerformanceObserver((entryList) => {
                console.log("CLS мониторинг: Получены новые данные о Layout Shifts");
                for (const entry of entryList.getEntries()) {
                    console.log("CLS мониторинг: Обработка записи Layout Shift:", entry);
                    if (!entry.hadRecentInput && entry.value > 0.01) {
                        console.debug('Layout shift:', entry.value.toFixed(4), entry.sources);
                        console.log("CLS мониторинг: Обнаружен значимый Layout Shift:", entry.value.toFixed(4));
                        
                        if (entry.sources && entry.sources.length > 0) {
                            console.log("CLS мониторинг: Источники Layout Shift:", entry.sources);
                        }
                    } else {
                        console.log("CLS мониторинг: Незначительный Layout Shift или был пользовательский ввод");
                    }
                }
            }).observe({type: 'layout-shift', buffered: true});
            console.log("CLS мониторинг: Наблюдатель Layout Shifts запущен");
            
            console.log("CLS мониторинг: Настройка наблюдения за LCP");
            // Отслеживание LCP
            new PerformanceObserver((entryList) => {
                console.log("CLS мониторинг: Получены данные о Largest Contentful Paint");
                const entries = entryList.getEntries();
                console.log("CLS мониторинг: Количество записей LCP:", entries.length);
                const lastEntry = entries[entries.length - 1];
                console.log("CLS мониторинг: Подробности LCP элемента:", lastEntry);
                console.debug('LCP:', (lastEntry.startTime / 1000).toFixed(2), 'секунд');
                console.log("CLS мониторинг: LCP время:", (lastEntry.startTime / 1000).toFixed(2), "секунд");
                if (lastEntry.element) {
                    console.log("CLS мониторинг: LCP элемент:", lastEntry.element);
                }
            }).observe({type: 'largest-contentful-paint', buffered: true});
            console.log("CLS мониторинг: Наблюдатель LCP запущен");
            
        } catch (e) {
            console.log("CLS мониторинг: Произошла ошибка при настройке наблюдателей:", e);
            console.debug('Performance API не полностью поддерживается', e);
        }
    } else {
        console.log("CLS мониторинг: PerformanceObserver не поддерживается в этом браузере");
    }
    
    console.log("CLS мониторинг: Скрипт инициализирован");
    </script>
    
    
   <!-- Оптимизированная загрузка hero-секции -->
<script>
    console.log('Hero: Инициализация скрипта оптимизации hero-секции');
    
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Hero: Событие DOMContentLoaded активировано');
        
        // Предзагрузка фонового изображения
        console.log('Hero: Поиск элемента hero-section');
        const heroSection = document.querySelector('.hero-section');
        if (heroSection) {
            console.log('Hero: Элемент hero-section найден, применяю стили');
            
            heroSection.style.backgroundSize = 'cover';
            console.log('Hero: Установлен backgroundSize: cover');
            
            heroSection.style.backgroundPosition = 'center';
            console.log('Hero: Установлен backgroundPosition: center');
            
            // Запуск particles.js только после загрузки hero секции
            console.log('Hero: Установка таймера (300мс) для активации particles.js');
            setTimeout(function() {
                console.log('Hero: Таймер истек, поиск элемента particles-js');
                const particles = document.getElementById('particles-js');
                if (particles) {
                    console.log('Hero: Элемент particles-js найден, устанавливаю opacity: 1');
                    particles.style.opacity = '1';
                } else {
                    console.log('Hero: Элемент particles-js не найден');
                }
            }, 300);
        } else {
            console.log('Hero: Элемент hero-section не найден');
        }
        
        // Приоритет загрузки для LCP элементов
        console.log('Hero: Настройка приоритета загрузки для LCP элементов');
        const heroTitle = document.querySelector('.hero-title');
        if (heroTitle) {
            console.log('Hero: Заголовок hero-title найден, устанавливаю высокий приоритет');
            heroTitle.setAttribute('importance', 'high');
        } else {
            console.log('Hero: Заголовок hero-title не найден');
        }
    });
    
    // Отложенная инициализация particles.js
    console.log('Hero: Настройка обработчика события window.load');
    window.addEventListener('load', function() {
        console.log('Hero: Событие load активировано, страница полностью загружена');
        console.log('Hero: Установка таймера (1000мс) для инициализации particles.js');
        
        setTimeout(function() {
            console.log('Hero: Проверка доступности particlesJS');
            if (typeof particlesJS !== 'undefined') {
                console.log('Hero: particlesJS доступен, начинаю инициализацию');
                particlesJS('particles-js', {
                    "particles": {
                        "number": {"value": 40, "density": {"enable": true, "value_area": 1000}},
                        "color": {"value": "#ffffff"},
                        "opacity": {"value": 0.3, "random": false},
                        "size": {"value": 2, "random": true},
                        "line_linked": {"enable": true, "distance": 150, "color": "#ffffff", "opacity": 0.2, "width": 1},
                        "move": {"enable": true, "speed": 1, "direction": "none", "random": false, "straight": false, "out_mode": "out"}
                    },
                    "interactivity": {
                        "detect_on": "canvas",
                        "events": {
                            "onhover": {"enable": false},
                            "onclick": {"enable": false},
                            "resize": true
                        }
                    },
                    "retina_detect": false
                });
                console.log('Hero: particlesJS успешно инициализирован');
            } else {
                console.log('Hero: particlesJS не доступен');
            }
        }, 1000);
    });
    
    console.log('Hero: Скрипт оптимизации hero-секции загружен');
    </script>
    
</head>
<body>
    <!-- Структура хедера с улучшенной семантикой и микроразметкой -->
 <div class="container">
    <header class="header-modern" id="main-header" itemscope itemtype="http://schema.org/WPHeader">
      <div class="header-wrapper">
        <!-- Логотип с улучшенными атрибутами -->
        <div class="logo-box" itemscope itemtype="http://schema.org/Organization">
          <a href="index.htm" class="logo-link" title="GigSys - IT аутсорсинг и поддержка бизнеса">
            <img src="assets/templates/img/logo2.webp" alt="GigSys - IT-аутсорсинг и поддержка" width="180" height="50" itemprop="logo" loading="eager">
            <meta itemprop="name" content="GigSys">
            <meta itemprop="url" content="https://gigsys.ru">
          </a>
        </div>
        
        <!-- Главная навигация (десктоп) с микроразметкой -->
        <nav class="desktop-nav" itemscope itemtype="http://schema.org/SiteNavigationElement" aria-label="Основная навигация">
          <ul class="main-menu" role="menubar">
            <li class="active" role="menuitem"><a href="index.htm" itemprop="url"><span itemprop="name">Главная</span></a></li>
            <li role="menuitem"><a href="o-kompanii.html" itemprop="url"><span itemprop="name">О компании</span></a></li>
            <li role="menuitem"><a href="landing.html" itemprop="url"><span itemprop="name">Мероприятия</span></a></li>
            <li class="menu-item-has-children" role="menuitem">
              <a href="#" class="services-toggle" 
                 aria-haspopup="true" 
                 aria-expanded="false"
                 aria-controls="mega-menu-services"
                 itemprop="url">
                <span class="toggle-icon"><i class="fas fa-th-large" aria-hidden="true"></i></span>
                <span class="toggle-text" itemprop="name">Услуги</span>
                <span class="toggle-arrow"><i class="fas fa-chevron-down" aria-hidden="true"></i></span>
              </a>
              
              <!-- Мега-меню с улучшенной семантикой -->
              <div class="mega-menu" id="mega-menu-services" role="region" aria-label="Меню услуг">
                <!-- Мобильная кнопка закрытия -->
                <button class="mega-menu-close d-md-none" aria-label="Закрыть меню">
                  <i class="fas fa-times" aria-hidden="true"></i>
                </button>
                
                <!-- Верхняя навигация по меню с микроразметкой и улучшенной доступностью -->
                <div class="mega-menu-header">
                  <div class="container">
                    <div class="menu-categories" role="tablist" aria-label="Категории услуг">
                      <button class="menu-category active" 
                              data-category="it" 
                              role="tab" 
                              id="tab-it" 
                              aria-selected="true" 
                              aria-controls="panel-it">ИТ-услуги</button>
                      <button class="menu-category" 
                              data-category="infra" 
                              role="tab" 
                              id="tab-infra" 
                              aria-selected="false" 
                              aria-controls="panel-infra">Инфраструктура</button>
                      <button class="menu-category" 
                              data-category="security" 
                              role="tab" 
                              id="tab-security" 
                              aria-selected="false" 
                              aria-controls="panel-security">Безопасность</button>
                      <button class="menu-category" 
                              data-category="software" 
                              role="tab" 
                              id="tab-software" 
                              aria-selected="false" 
                              aria-controls="panel-software">ПО и сервисы</button>
                    </div>
                  </div>
                </div>

                <!-- Основной контент меню с микроразметкой для каждой услуги -->
                <div class="mega-menu-content">
                  <div class="container">
                    <!-- ИТ-услуги -->
                    <div class="menu-panel active" 
                         data-panel="it" 
                         role="tabpanel" 
                         id="panel-it" 
                         aria-labelledby="tab-it">
                      <div class="menu-panel-grid">
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-headset" aria-hidden="true"></i>
                              Поддержка и аутсорсинг
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="it-support.html">
                                  <span class="link-icon"><i class="fas fa-user-headset" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">IT-поддержка</span>
                                    <span class="link-desc" itemprop="description">Профессиональная поддержка вашего бизнеса</span>
                                    <meta itemprop="serviceType" content="IT Support">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="it-podderzhka.html">
                                  <span class="link-icon"><i class="fas fa-users-cog" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">IT-аутсорсинг</span>
                                    <span class="link-desc" itemprop="description">Комплексное обслуживание инфраструктуры</span>
                                    <meta itemprop="serviceType" content="IT Outsourcing">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="virtual-office.html">
                                  <span class="link-icon"><i class="fas fa-laptop-house" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Виртуальный офис</span>
                                    <span class="link-desc" itemprop="description">Защищенное рабочее пространство</span>
                                    <meta itemprop="serviceType" content="Virtual Office">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-info-circle" aria-hidden="true"></i>
                              О компании
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem">
                                <a href="o-kompanii.html">
                                  <span class="link-icon"><i class="fas fa-building" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title">О нас</span>
                                    <span class="link-desc">История и ценности компании</span>
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem">
                                <a href="kontaktyi.html">
                                  <span class="link-icon"><i class="fas fa-address-card" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title">Контакты</span>
                                    <span class="link-desc">Свяжитесь с нашими специалистами</span>
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem">
                                <a href="landing.html">
                                  <span class="link-icon"><i class="fas fa-newspaper" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title">Мероприятияspan>
                                    <span class="link-desc">Актуальные события</span>
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <!-- Выделенное предложение с микроразметкой -->
                        <div class="menu-panel-highlight" itemscope itemtype="http://schema.org/Offer">
                          <div class="highlight-content">
                            <div class="highlight-badge">Популярное</div>
                            <h3 itemprop="name">Выгодный IT-аутсорсинг</h3>
                            <p itemprop="description">Альтернатива штатным специалистам. Экономия до 30% на IT-затратах.</p>
                            <a href="it-poddergka.html" class="highlight-btn" itemprop="url">
                              Подробнее
                              <i class="fas fa-long-arrow-right" aria-hidden="true"></i>
                            </a>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <!-- Инфраструктура -->
                    <div class="menu-panel" 
                         data-panel="infra" 
                         role="tabpanel" 
                         id="panel-infra" 
                         aria-labelledby="tab-infra">
                      <div class="menu-panel-grid">
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-server" aria-hidden="true"></i>
                              Серверы и сети
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="obsluzhivanie-serverov.html">
                                  <span class="link-icon"><i class="fas fa-wrench" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Обслуживание серверов</span>
                                    <span class="link-desc" itemprop="description">Техническая поддержка и мониторинг</span>
                                    <meta itemprop="serviceType" content="Server Maintenance">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="montazh-kompyuternykh-setey.html">
                                  <span class="link-icon"><i class="fas fa-network-wired" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Монтаж компьютерных сетей</span>
                                    <span class="link-desc" itemprop="description">Проектирование и развертывание сетей</span>
                                    <meta itemprop="serviceType" content="Network Installation">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-cloud" aria-hidden="true"></i>
                              Облачные решения
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="hosting.html">
                                  <span class="link-icon"><i class="fas fa-server" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Хостинг</span>
                                    <span class="link-desc" itemprop="description">Надежный хостинг для ваших проектов</span>
                                    <meta itemprop="serviceType" content="Hosting">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="virtual-office.html">
                                  <span class="link-icon"><i class="fas fa-desktop" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Виртуальный офис</span>
                                    <span class="link-desc" itemprop="description">Работа из любой точки мира</span>
                                    <meta itemprop="serviceType" content="Virtual Office">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <!-- Выделенное предложение с микроразметкой -->
                        <div class="menu-panel-highlight infra-highlight" itemscope itemtype="http://schema.org/Offer">
                          <div class="highlight-content">
                            <div class="highlight-badge">Выгодно</div>
                            <h3 itemprop="name">Обслуживание серверов</h3>
                            <p itemprop="description">Профессиональное администрирование и мониторинг с гарантией 99.9% работоспособности</p>
                            <a href="obsluzhivanie-serverov.html" class="highlight-btn" itemprop="url">
                              Подробнее
                              <i class="fas fa-long-arrow-right" aria-hidden="true"></i>
                            </a>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <!-- Безопасность -->
                    <div class="menu-panel" 
                         data-panel="security" 
                         role="tabpanel" 
                         id="panel-security" 
                         aria-labelledby="tab-security">
                      <div class="menu-panel-grid">
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-shield-alt" aria-hidden="true"></i>
                              Кибербезопасность
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="it-podderzhka.html#security">
                                  <span class="link-icon"><i class="fas fa-lock" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Информационная безопасность</span>
                                    <span class="link-desc" itemprop="description">Комплексная защита IT-систем</span>
                                    <meta itemprop="serviceType" content="Information Security">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="virtual-office.html">
                                  <span class="link-icon"><i class="fas fa-virus-slash" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Защищенный офис</span>
                                    <span class="link-desc" itemprop="description">Безопасное рабочее пространство</span>
                                    <meta itemprop="serviceType" content="Secure Office">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-video" aria-hidden="true"></i>
                              Физическая безопасность
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="ustanovka-videonablyudeniya.html">
                                  <span class="link-icon"><i class="fas fa-camera" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Видеонаблюдение</span>
                                    <span class="link-desc" itemprop="description">Установка камер в офисы</span>
                                    <meta itemprop="serviceType" content="Video Surveillance">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="montazh-kompyuternykh-setey.html#security">
                                  <span class="link-icon"><i class="fas fa-key" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Защита сетей</span>
                                    <span class="link-desc" itemprop="description">Безопасность сетевой инфраструктуры</span>
                                    <meta itemprop="serviceType" content="Network Security">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <!-- Выделенное предложение с микроразметкой -->
                        <div class="menu-panel-highlight security-highlight" itemscope itemtype="http://schema.org/Offer">
                          <div class="highlight-content">
                            <div class="highlight-badge">Рекомендуем</div>
                            <h3 itemprop="name">Установка видеонаблюдения</h3>
                            <p itemprop="description">Современные системы видеонаблюдения для вашего офиса с удаленным доступом</p>
                            <a href="ustanovka-videonablyudeniya.html" class="highlight-btn" itemprop="url">
                              Подробнее
                              <i class="fas fa-long-arrow-right" aria-hidden="true"></i>
                            </a>
                          </div>
                        </div>
                      </div>
                    </div>
                    
                    <!-- ПО и сервисы -->
                    <div class="menu-panel" 
                         data-panel="software" 
                         role="tabpanel" 
                         id="panel-software" 
                         aria-labelledby="tab-software">
                      <div class="menu-panel-grid">
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-laptop-code" aria-hidden="true"></i>
                              Разработка
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="landing.html">
                                  <span class="link-icon"><i class="fas fa-globe" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Разработка лендингов</span>
                                    <span class="link-desc" itemprop="description">Создание продающих страниц</span>
                                    <meta itemprop="serviceType" content="Landing Page Development">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="virtual-office.html#solutions">
                                  <span class="link-icon"><i class="fas fa-code" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Облачные решения</span>
                                    <span class="link-desc" itemprop="description">Программные продукты для бизнеса</span>
                                    <meta itemprop="serviceType" content="Cloud Solutions">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <div class="menu-column">
                          <div class="menu-group">
                            <h4 class="menu-group-title">
                              <i class="fas fa-calculator" aria-hidden="true"></i>
                              Бизнес-приложения
                            </h4>
                            <ul class="menu-list" role="menu">
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="uslugi-1c.html">
                                  <span class="link-icon"><i class="fas fa-calculator" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">Услуги 1С</span>
                                    <span class="link-desc" itemprop="description">Внедрение и поддержка 1С</span>
                                    <meta itemprop="serviceType" content="1C Services">
                                  </span>
                                </a>
                              </li>
                              <li role="menuitem" itemscope itemtype="http://schema.org/Service">
                                <a href="prostoe-reshenie-slozhnyix-zadach.html">
                                  <span class="link-icon"><i class="fas fa-cloud-download-alt" aria-hidden="true"></i></span>
                                  <span class="link-content">
                                    <span class="link-title" itemprop="name">1С ФРЕШ</span>
                                    <span class="link-desc" itemprop="description">Преимущества облачной 1С</span>
                                    <meta itemprop="serviceType" content="1C Fresh">
                                  </span>
                                </a>
                              </li>
                            </ul>
                          </div>
                        </div>
                        
                        <!-- Выделенное предложение с микроразметкой -->
                        <div class="menu-panel-highlight software-highlight" itemscope itemtype="http://schema.org/Offer">
                          <div class="highlight-content">
                            <div class="highlight-badge">Акция</div>
                            <h3 itemprop="name">1С ФРЕШ в облаке</h3>
                            <p itemprop="description">Простое решение сложных задач. Преимущества облачной версии 1С.</p>
                            <a href="prostoe-reshenie-slozhnyix-zadach.html" class="highlight-btn" itemprop="url">
                              Подробнее
                              <i class="fas fa-long-arrow-right" aria-hidden="true"></i>
                            </a>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
                
                <!-- Футер меню с микроразметкой -->
                <div class="mega-menu-footer">
                  <div class="container">
                    <div class="mm-footer-content">
                      <div class="mm-footer-cta">
                        <p>Нужна консультация специалиста?</p>
                        <a href="kontaktyi.html" class="mm-cta-btn" itemscope itemtype="http://schema.org/ContactPoint">
                          <i class="fas fa-phone-alt" aria-hidden="true"></i>
                          <span itemprop="name">Получить консультацию</span>
                          <meta itemprop="contactType" content="customer support">
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </li>
            <li role="menuitem"><a href="kontaktyi.html" itemprop="url"><span itemprop="name">Контакты</span></a></li>
          </ul>
        </nav>
        
        <!-- Контактная информация с микроразметкой -->
        <div class="header-contacts" itemscope itemtype="http://schema.org/Organization">
          <meta itemprop="name" content="GigSys">
          <div class="contact-item">
            <a href="#map-modal" class="popup-with-form contact-link">
              <div class="contact-icon">
                <i class="fa fa-map-marker-alt" aria-hidden="true"></i>
              </div>
              <div class="contact-text">
                <div class="contact-label">Адрес офиса</div>
                <div class="contact-info" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
                  <span itemprop="addressLocality">г. Москва</span>, 
                  <span itemprop="streetAddress">Ракетный бульвар, д.15, оф.31</span>
                </div>
              </div>
            </a>
          </div>
          
          <div class="contact-item">
            <a href="tel:88003501160" class="contact-link" itemprop="telephone">
              <div class="contact-icon">
                <i class="fa fa-phone-alt" aria-hidden="true"></i>
              </div>
              <div class="contact-text">
                <div class="contact-label">Телефон</div>
                <div class="contact-info">8 (499) 350-11-60</div>
              </div>
            </a>
          </div>
          
          <!-- Добавление скрытых полей для SEO -->
          <meta itemprop="email" content="it@gigsys.ru">
          <meta itemprop="url" content="https://gigsys.ru">
          <meta itemprop="foundingDate" content="2010">
        </div>
        
        <!-- CTA Buttons с вертикальным расположением -->
        <div class="header-actions vertical">
          <a href="#callback" class="btn btn-primary popup-with-form" rel="nofollow">
            <i class="fas fa-headset" aria-hidden="true"></i>
            <span>Заказать звонок</span>
          </a>
          
          <a href="http://lk.gigsys.ru/hd/customer.pl" target="_blank" class="btn btn-outline" rel="noopener">
            <i class="fas fa-user-circle" aria-hidden="true"></i>
            <span>Личный кабинет</span>
          </a>
        </div>
        
        <!-- Мобильное меню (бургер) -->
        <button class="mobile-menu-toggle" 
                aria-label="Открыть меню" 
                aria-expanded="false" 
                aria-controls="mobile-menu">
          <div class="hamburger">
            <span></span>
            <span></span>
            <span></span>
          </div>
        </button>
      </div>
      
      <!-- Мобильное меню (выпадающее) с улучшенной доступностью -->
      <div class="mobile-menu" id="mobile-menu" aria-hidden="true">
        <div class="mobile-menu-header">
          <div class="mobile-logo">
            <a href="index.htm">
              <img src="assets/templates/img/logo.png" alt="GigSys - IT аутсорсинг" width="140" height="35" loading="lazy">
            </a>
          </div>
          <button class="mobile-menu-close" aria-label="Закрыть меню">
            <i class="fas fa-times" aria-hidden="true"></i>
          </button>
        </div>
        
        <div class="mobile-menu-content">
          <div class="mobile-search">
            <form action="search.html" method="get" role="search">
              <input type="text" name="q" placeholder="Поиск..." aria-label="Поиск">
              <button type="submit" aria-label="Искать"><i class="fa fa-search" aria-hidden="true"></i></button>
            </form>
          </div>
          
          <!-- Мобильная навигация с микроразметкой -->
          <nav class="mobile-nav" itemscope itemtype="http://schema.org/SiteNavigationElement">
            <ul>
              <li class="active"><a href="index.htm" itemprop="url"><span itemprop="name">Главная</span></a></li>
              <li><a href="o-kompanii.html" itemprop="url"><span itemprop="name">О компании</span></a></li>
              <li><a href="landing.html" itemprop="url"><span itemprop="name">Мероприятия</span></a></li>
              <li class="has-dropdown">
                <a href="#" aria-expanded="false" aria-haspopup="true">
                  <span itemprop="name">Услуги</span> <i class="fas fa-chevron-down" aria-hidden="true"></i>
                </a>
                <ul class="mobile-submenu">
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="it-support.html" itemprop="url">
                      <i class="fas fa-headset" aria-hidden="true"></i> 
                      <span itemprop="name">IT-поддержка</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="it-autsorsing.html" itemprop="url">
                      <i class="fas fa-tasks" aria-hidden="true"></i> 
                      <span itemprop="name">IT-аутсорсинг</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="virtual-office.html" itemprop="url">
                      <i class="fas fa-shield-alt" aria-hidden="true"></i> 
                      <span itemprop="name">Защищенный офис</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="obsluzhivanie-serverov.html" itemprop="url">
                      <i class="fas fa-server" aria-hidden="true"></i> 
                      <span itemprop="name">Серверы</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="montazh-kompyuternykh-setey.html" itemprop="url">
                      <i class="fas fa-network-wired" aria-hidden="true"></i> 
                      <span itemprop="name">Офисные сети</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="ustanovka-videonablyudeniya.html" itemprop="url">
                      <i class="fas fa-video" aria-hidden="true"></i> 
                      <span itemprop="name">Видеонаблюдение</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="uslugi-1c.html" itemprop="url">
                      <i class="fas fa-calculator" aria-hidden="true"></i> 
                      <span itemprop="name">Услуги 1С</span>
                    </a>
                  </li>
                  <li itemscope itemtype="http://schema.org/Service">
                    <a href="hosting.html" itemprop="url">
                      <i class="fas fa-cloud" aria-hidden="true"></i> 
                      <span itemprop="name">Хостинг</span>
                    </a>
                  </li>
                </ul>
              </li>
              <li><a href="kontaktyi.html" itemprop="url"><span itemprop="name">Контакты</span></a></li>
            </ul>
          </nav>
          
          <!-- Контактная информация для мобильного меню с микроразметкой -->
          <div class="mobile-contacts" itemscope itemtype="http://schema.org/Organization">
            <meta itemprop="name" content="GigSys">
            <div class="mobile-contact-item">
              <i class="fa fa-phone" aria-hidden="true"></i>
              <a href="tel:88003501160" itemprop="telephone">8(499)350-11-60</a>
            </div>
            <div class="mobile-contact-item">
              <i class="fa fa-envelope" aria-hidden="true"></i>
              <a href="mailto:it@gigsys.ru" itemprop="email">it@gigsys.ru</a>
            </div>
            <div class="mobile-contact-item">
              <i class="fa fa-map-marker" aria-hidden="true"></i>
              <address itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
                <span itemprop="addressLocality">г. Москва</span>, 
                <span itemprop="streetAddress">Ракетный бульвар, д.15, оф.31</span>
              </address>
            </div>
          </div>
          
          <!-- Кнопки действий в мобильном меню -->
          <div class="mobile-actions">
            <a href="#callback" class="btn btn-primary popup-with-form" rel="nofollow">
              <i class="fas fa-headset" aria-hidden="true"></i>
              <span>Заказать звонок</span>
            </a>
            
            <a href="http://lk.gigsys.ru/hd/customer.pl" target="_blank" class="btn btn-outline" rel="noopener">
              <i class="fas fa-user-circle" aria-hidden="true"></i>
              <span>Личный кабинет</span>
            </a>
          </div>
        </div>
      </div>
      
      <!-- Roistat script с async и defer для ускорения загрузки -->
      <script src="https://widget.roistat.com/widget/s8xWAIxVHJ" async defer></script>
    </header>
  </div>
  
   <!-- JavaScript для хедера - Оптимизирован -->
<script>
    /**
     * Оптимизированный JavaScript для хедера и мега-меню
     * - Исправлено открытие/закрытие меню по клику на кнопку
     * - Улучшена производительность
     * - Убраны все ховеры, активация строго по клику
     */
    
    document.addEventListener('DOMContentLoaded', function() {
        console.log('Хедер: Событие DOMContentLoaded активировано');
        
        // === БАЗОВЫЕ ЭЛЕМЕНТЫ ===
        console.log('Хедер: Инициализация базовых элементов');
        // Хедер и мобильное меню
        const header = document.getElementById('main-header');
        console.log('Хедер: Элемент main-header найден:', !!header);
        
        const menuToggle = document.querySelector('.mobile-menu-toggle');
        console.log('Хедер: Элемент mobile-menu-toggle найден:', !!menuToggle);
        
        const mobileMenu = document.querySelector('.mobile-menu');
        console.log('Хедер: Элемент mobile-menu найден:', !!mobileMenu);
        
        const mobileMenuClose = document.querySelector('.mobile-menu-close');
        console.log('Хедер: Элемент mobile-menu-close найден:', !!mobileMenuClose);
        
        const dropdowns = document.querySelectorAll('.has-dropdown');
        console.log('Хедер: Найдено', dropdowns.length, 'выпадающих элементов');
        
        // Мега-меню
        console.log('Хедер: Инициализация элементов мега-меню');
        const servicesToggle = document.querySelector('.services-toggle');
        console.log('Хедер: Элемент services-toggle найден:', !!servicesToggle);
        
        const megaMenu = document.querySelector('.mega-menu');
        console.log('Хедер: Элемент mega-menu найден:', !!megaMenu);
        
        let megaMenuClose = document.querySelector('.mega-menu-close');
        console.log('Хедер: Элемент mega-menu-close найден:', !!megaMenuClose);
        
        const menuCategories = document.querySelectorAll('.menu-category');
        console.log('Хедер: Найдено', menuCategories.length, 'категорий меню');
        
        const menuPanels = document.querySelectorAll('.menu-panel');
        console.log('Хедер: Найдено', menuPanels.length, 'панелей меню');
        
        // Дополнительные элементы
        console.log('Хедер: Инициализация дополнительных элементов');
        const anchorLinks = document.querySelectorAll('.mega-menu a[href*="#"]');
        console.log('Хедер: Найдено', anchorLinks.length, 'якорных ссылок в мега-меню');
        
        const actionButtons = document.querySelectorAll('.highlight-btn, .mm-cta-btn');
        console.log('Хедер: Найдено', actionButtons.length, 'кнопок действий');
        
        // === СОСТОЯНИЕ ===
        console.log('Хедер: Инициализация переменных состояния');
        let isMegaMenuOpen = false;
        console.log('Хедер: Начальное состояние мега-меню:', isMegaMenuOpen ? 'открыто' : 'закрыто');
        
        let isAnimating = false;
        console.log('Хедер: Начальное состояние анимации:', isAnimating ? 'в процессе' : 'неактивна');
        
        // === ВСПОМОГАТЕЛЬНЫЕ ФУНКЦИИ ===
        console.log('Хедер: Настройка вспомогательных функций');
        
        // Анимация с проверкой на поддержку
        function animateElement(element, isOpening, callback) {
            console.log('Хедер: Вызвана animateElement с параметрами:', {
                element: !!element, 
                isOpening: isOpening
            });
            
            if (!element) {
                console.log('Хедер: Анимация отменена - элемент не найден');
                return;
            }
            
            isAnimating = true;
            console.log('Хедер: Состояние анимации установлено:', isAnimating);
            
            // Сбрасываем предыдущие анимации
            element.style.animation = '';
            console.log('Хедер: Предыдущие анимации сброшены');
            
            // Применяем анимацию
            console.log('Хедер: Установка таймера для анимации');
            setTimeout(() => {
                console.log('Хедер: Применение анимации:', isOpening ? 'fadeIn' : 'fadeOut');
                element.style.animation = isOpening 
                    ? 'fadeIn 300ms forwards' 
                    : 'fadeOut 250ms forwards';
                
                // Ждем завершения анимации
                console.log('Хедер: Установка таймера для завершения анимации');
                setTimeout(() => {
                    isAnimating = false;
                    console.log('Хедер: Анимация завершена, состояние установлено:', isAnimating ? 'в процессе' : 'неактивна');
                    if (callback) {
                        console.log('Хедер: Выполнение callback-функции анимации');
                        callback();
                    }
                }, isOpening ? 300 : 250);
            }, 10);
        }
        
        // Добавление стилей анимации
        function addAnimationStyles() {
            console.log('Хедер: Вызван addAnimationStyles');
            if (document.getElementById('mega-menu-animations')) {
                console.log('Хедер: Стили анимации уже существуют, пропускаю');
                return;
            }
            
            console.log('Хедер: Создание стилей анимации');
            const style = document.createElement('style');
            style.id = 'mega-menu-animations';
            style.textContent = `
                @keyframes fadeIn {
                    from { opacity: 0; transform: translateY(10px); }
                    to { opacity: 1; transform: translateY(0); }
                }
                @keyframes fadeOut {
                    from { opacity: 1; transform: translateY(0); }
                    to { opacity: 0; transform: translateY(10px); }
                }
                .btn-pressed {
                    transform: scale(0.95) !important;
                    transition: transform 0.2s !important;
                }
            `;
            document.head.appendChild(style);
            console.log('Хедер: Стили анимации добавлены в head документа');
        }
        
        // === ОСНОВНЫЕ ФУНКЦИИ ===
        console.log('Хедер: Настройка основных функций');
        
        // Переключатель мега-меню
        function toggleMegaMenu(forceState) {
            console.log('Хедер: Вызван toggleMegaMenu с параметром:', forceState);
            
            if (!megaMenu) {
                console.log('Хедер: Невозможно переключить мега-меню - элемент не найден');
                return;
            }
            
            if (isAnimating) {
                console.log('Хедер: Невозможно переключить мега-меню - анимация в процессе');
                return;
            }
            
            // Определяем новое состояние
            const willOpen = forceState !== undefined ? forceState : !isMegaMenuOpen;
            console.log('Хедер: Мега-меню будет:', willOpen ? 'открыто' : 'закрыто');
            
            console.log('Переключение мега-меню:', willOpen ? 'открытие' : 'закрытие'); // отладка
            
            if (willOpen) {
                // Открываем меню
                console.log('Хедер: Добавление класса "active" к мега-меню');
                megaMenu.classList.add('active');
                
                console.log('Хедер: Добавление класса "mega-menu-open" к body');
                document.body.classList.add('mega-menu-open');
                
                if (servicesToggle) {
                    console.log('Хедер: Установка aria-expanded="true" на services-toggle');
                    servicesToggle.setAttribute('aria-expanded', 'true');
                }
                
                console.log('Хедер: Анимация открытия мега-меню');
                animateElement(megaMenu, true, function() {
                    console.log('Хедер: Анимация открытия мега-меню завершена');
                    // Фокус на первую категорию для доступности
                    const activeCategory = document.querySelector('.menu-category.active');
                    if (activeCategory) {
                        console.log('Хедер: Фокусировка на активной категории для доступности');
                        activeCategory.focus();
                    } else {
                        console.log('Хедер: Не найдена активная категория для фокуса');
                    }
                });
                
                // Закрываем мобильное меню если оно открыто
                if (mobileMenu && mobileMenu.classList.contains('active')) {
                    console.log('Хедер: Мобильное меню открыто, закрываю его');
                    mobileMenu.classList.remove('active');
                    menuToggle.classList.remove('active');
                    document.body.classList.remove('menu-open');
                    console.log('Хедер: Мобильное меню закрыто');
                }
            } else {
                // Закрываем меню
                console.log('Хедер: Анимация закрытия мега-меню');
                animateElement(megaMenu, false, function() {
                    console.log('Хедер: Анимация закрытия мега-меню завершена');
                    megaMenu.classList.remove('active');
                    document.body.classList.remove('mega-menu-open');
                    
                    if (servicesToggle) {
                        console.log('Хедер: Установка aria-expanded="false" на services-toggle');
                        servicesToggle.setAttribute('aria-expanded', 'false');
                        console.log('Хедер: Фокусировка на кнопке services-toggle');
                        servicesToggle.focus();
                    }
                });
            }
            
            // Устанавливаем новое состояние
            isMegaMenuOpen = willOpen;
            console.log('Хедер: Состояние мега-меню обновлено до:', isMegaMenuOpen ? 'открыто' : 'закрыто');
        }
        
        // Создание кнопки закрытия
        function createCloseButton() {
            console.log('Хедер: Вызван createCloseButton');
            
            if (megaMenu && !megaMenuClose) {
                console.log('Хедер: Создание кнопки закрытия для мега-меню');
                const closeButton = document.createElement('button');
                closeButton.className = 'mega-menu-close';
                closeButton.setAttribute('aria-label', 'Закрыть меню');
                closeButton.innerHTML = '<i class="fas fa-times"></i>';
                
                console.log('Хедер: Добавление кнопки закрытия в мега-меню');
                megaMenu.prepend(closeButton);
                
                // Обновляем ссылку
                megaMenuClose = closeButton;
                console.log('Хедер: Обновлена ссылка megaMenuClose');
                
                // Добавляем обработчик
                console.log('Хедер: Добавление обработчика клика на кнопку закрытия');
                megaMenuClose.addEventListener('click', function(e) {
                    console.log('Хедер: Нажата кнопка закрытия');
                    e.preventDefault();
                    e.stopPropagation();
                    console.log('Хедер: Закрытие мега-меню через кнопку закрытия');
                    toggleMegaMenu(false);
                });
            } else {
                console.log('Хедер: Кнопка закрытия не создана - megaMenu не найден или кнопка закрытия уже существует');
            }
        }
        
        // Обработка скролла
        function setupScrollHandler() {
            console.log('Хедер: Вызван setupScrollHandler');
            
            if (!header) {
                console.log('Хедер: Невозможно настроить обработчик скролла - элемент header не найден');
                return;
            }
            
            function handleScroll() {
                console.log('Хедер: Выполнение handleScroll');
                if (window.scrollY > 50) {
                    console.log('Хедер: scrollY > 50, добавление класса "scrolled"');
                    header.classList.add('scrolled');
                } else {
                    console.log('Хедер: scrollY <= 50, удаление класса "scrolled"');
                    header.classList.remove('scrolled');
                }
            }
            
            // Инициализация
            console.log('Хедер: Начальный вызов обработчика скролла');
            handleScroll();
            
            // Оптимизированный обработчик
            let scrollTimeout;
            console.log('Хедер: Добавление оптимизированного обработчика события скролла');
            window.addEventListener('scroll', function() {
                if (!scrollTimeout) {
                    scrollTimeout = setTimeout(function() {
                        console.log('Хедер: Выполнение отложенного обработчика скролла');
                        handleScroll();
                        scrollTimeout = null;
                    }, 100);
                }
            }, { passive: true });
            console.log('Хедер: Настройка обработчика скролла завершена');
        }
        
        // === ИНИЦИАЛИЗАЦИЯ ===
        console.log('Хедер: Начало инициализации');
        
        // Добавляем стили анимаций
        console.log('Хедер: Добавление стилей анимаций');
        addAnimationStyles();
        
        // Настраиваем хедер
        console.log('Хедер: Настройка обработчика скролла');
        setupScrollHandler();
        
        // Создаем кнопку закрытия для мега-меню
        console.log('Хедер: Создание кнопки закрытия для мега-меню');
        createCloseButton();
        
        // === ОБРАБОТЧИКИ СОБЫТИЙ ===
        console.log('Хедер: Настройка обработчиков событий');
        
        // Обработчик кнопки "Услуги" для открытия/закрытия мега-меню
        if (servicesToggle && megaMenu) {
            console.log('Хедер: Добавление обработчика клика на кнопку переключения услуг');
            servicesToggle.addEventListener('click', function(e) {
                console.log('Хедер: Нажата кнопка переключения услуг');
                e.preventDefault();
                e.stopPropagation();
                console.log('Хедер: Переключение мега-меню');
                toggleMegaMenu(); // Переключаем состояние
            });
            
            // Устанавливаем начальные атрибуты для доступности
            console.log('Хедер: Установка атрибутов aria на кнопку переключения услуг');
            servicesToggle.setAttribute('aria-haspopup', 'true');
            servicesToggle.setAttribute('aria-expanded', 'false');
        } else {
            console.log('Хедер: Кнопка переключения услуг или мега-меню не найдены, пропускаю настройку');
        }
        
        // Закрытие мега-меню при клике вне
        console.log('Хедер: Добавление обработчика клика по документу для закрытия мега-меню');
        document.addEventListener('click', function(e) {
            console.log('Хедер: Обнаружен клик по документу');
            if (isMegaMenuOpen && 
                megaMenu && 
                !megaMenu.contains(e.target) && 
                !servicesToggle.contains(e.target)) {
                console.log('Хедер: Обнаружен клик вне мега-меню, закрываю его');
                toggleMegaMenu(false);
            } else {
                console.log('Хедер: Клик не относится к закрытию мега-меню');
            }
        });
        
        // Закрытие по Escape
        console.log('Хедер: Добавление обработчика нажатия клавиш для Escape');
        document.addEventListener('keydown', function(e) {
            console.log('Хедер: Обнаружено нажатие клавиши:', e.key);
            if (e.key === 'Escape' && isMegaMenuOpen) {
                console.log('Хедер: Нажата клавиша Escape при открытом мега-меню, закрываю его');
                toggleMegaMenu(false);
            }
        });
        
        // Обработка кнопок внутри мега-меню
        console.log('Хедер: Настройка обработчиков кнопок действий, количество:', actionButtons.length);
        actionButtons.forEach(function(btn, index) {
            console.log('Хедер: Добавление обработчика клика на кнопку действия', index);
            btn.addEventListener('click', function() {
                console.log('Хедер: Нажата кнопка действия, индекс:', index);
                
                // Эффект нажатия
                console.log('Хедер: Добавление класса btn-pressed для визуального эффекта');
                btn.classList.add('btn-pressed');
                
                setTimeout(function() {
                    console.log('Хедер: Удаление класса btn-pressed после таймаута');
                    btn.classList.remove('btn-pressed');
                    
                    // Закрываем мега-меню
                    if (isMegaMenuOpen) {
                        console.log('Хедер: Мега-меню открыто, планирую закрытие');
                        setTimeout(function() {
                            console.log('Хедер: Закрытие мега-меню после действия кнопки');
                            toggleMegaMenu(false);
                        }, 100);
                    }
                }, 200);
            });
        });
        
        // Обработка ссылок с якорями
        console.log('Хедер: Настройка обработчиков якорных ссылок, количество:', anchorLinks.length);
        anchorLinks.forEach(function(link, index) {
            console.log('Хедер: Добавление обработчика клика на якорную ссылку', index);
            link.addEventListener('click', function(e) {
                console.log('Хедер: Нажата якорная ссылка, индекс:', index);
                const href = this.getAttribute('href');
                console.log('Хедер: Атрибут href якорной ссылки:', href);
                
                if (!href) {
                    console.log('Хедер: Атрибут href отсутствует, пропускаю');
                    return;
                }
                
                const isAnchor = href.indexOf('#') === 0 || href.indexOf('/#') !== -1;
                console.log('Хедер: Это якорная ссылка:', isAnchor);
                
                if (isAnchor) {
                    console.log('Хедер: Обнаружена якорная ссылка, закрываю мега-меню');
                    // Закрываем мега-меню после клика на якорную ссылку
                    toggleMegaMenu(false);
                }
            });
        });
        
        // Обработка мобильного меню
        console.log('Хедер: Настройка обработчиков мобильного меню');
        if (menuToggle && mobileMenu) {
            console.log('Хедер: Добавление обработчика клика на переключатель мобильного меню');
            menuToggle.addEventListener('click', function(e) {
                console.log('Хедер: Нажат переключатель мобильного меню');
                e.preventDefault();
                e.stopPropagation();
                
                // Закрываем мега-меню, если оно открыто
                if (isMegaMenuOpen) {
                    console.log('Хедер: Мега-меню открыто, закрываю его перед переключением мобильного меню');
                    toggleMegaMenu(false);
                }
                
                // Переключаем мобильное меню
                console.log('Хедер: Переключение мобильного меню');
                menuToggle.classList.toggle('active');
                mobileMenu.classList.toggle('active');
                document.body.classList.toggle('menu-open');
                console.log('Хедер: Мобильное меню переключено:', mobileMenu.classList.contains('active') ? 'открыто' : 'закрыто');
            });
            
            // Закрытие мобильного меню
            if (mobileMenuClose) {
                console.log('Хедер: Добавление обработчика клика на кнопку закрытия мобильного меню');
                mobileMenuClose.addEventListener('click', function(e) {
                    console.log('Хедер: Нажата кнопка закрытия мобильного меню');
                    e.preventDefault();
                    console.log('Хедер: Закрытие мобильного меню');
                    menuToggle.classList.remove('active');
                    mobileMenu.classList.remove('active');
                    document.body.classList.remove('menu-open');
                    console.log('Хедер: Мобильное меню закрыто');
                });
            } else {
                console.log('Хедер: Кнопка закрытия мобильного меню не найдена');
            }
            
            // Закрытие при клике вне меню
            console.log('Хедер: Добавление обработчика клика по документу для закрытия мобильного меню');
            document.addEventListener('click', function(e) {
                console.log('Хедер: Обнаружен клик по документу (обработчик мобильного меню)');
                if (mobileMenu.classList.contains('active') && 
                    !mobileMenu.contains(e.target) && 
                    !menuToggle.contains(e.target)) {
                    console.log('Хедер: Обнаружен клик вне мобильного меню, закрываю его');
                    menuToggle.classList.remove('active');
                    mobileMenu.classList.remove('active');
                    document.body.classList.remove('menu-open');
                    console.log('Хедер: Мобильное меню закрыто');
                }
            });
        } else {
            console.log('Хедер: Переключатель мобильного меню или мобильное меню не найдены, пропускаю настройку');
        }
        
        // Обработка выпадающих списков
        console.log('Хедер: Настройка обработчиков выпадающих списков, количество:', dropdowns.length);
        dropdowns.forEach(function(dropdown, index) {
            console.log('Хедер: Обработка выпадающего списка', index);
            const link = dropdown.querySelector('a');
            
            if (link) {
                console.log('Хедер: Найдена ссылка в выпадающем списке', index);
                console.log('Хедер: Добавление обработчика клика на ссылку выпадающего списка', index);
                link.addEventListener('click', function(e) {
                    console.log('Хедер: Нажата ссылка выпадающего списка, индекс:', index);
                    // Предотвращаем переход для выпадающих меню
                    e.preventDefault();
                    
                    // Закрываем другие открытые дропдауны
                    console.log('Хедер: Закрытие других открытых выпадающих списков');
                    dropdowns.forEach(function(otherDropdown, otherIndex) {
                        if (otherDropdown !== dropdown && otherDropdown.classList.contains('active')) {
                            console.log('Хедер: Закрытие другого выпадающего списка', otherIndex);
                            otherDropdown.classList.remove('active');
                        }
                    });
                    
                    // Переключаем текущий дропдаун
                    console.log('Хедер: Переключение текущего выпадающего списка', index);
                    dropdown.classList.toggle('active');
                    console.log('Хедер: Состояние выпадающего списка:', dropdown.classList.contains('active') ? 'открыт' : 'закрыт');
                });
            } else {
                console.log('Хедер: Ссылка в выпадающем списке не найдена', index);
            }
        });
        
        // Обработка категорий в мега-меню
        console.log('Хедер: Настройка категорий меню и панелей');
        if (menuCategories.length > 0 && menuPanels.length > 0) {
            console.log('Хедер: Найдены категории меню и панели, настраиваю взаимодействия');
            menuCategories.forEach(function(category, index) {
                console.log('Хедер: Добавление обработчика клика на категорию меню', index);
                category.addEventListener('click', function(e) {
                    console.log('Хедер: Нажата категория меню, индекс:', index);
                    e.preventDefault();
                    
                    // Пропускаем если категория уже активна
                    if (category.classList.contains('active')) {
                        console.log('Хедер: Категория уже активна, пропускаю');
                        return;
                    }
                    
                    const targetPanel = category.getAttribute('data-category');
                    console.log('Хедер: Целевая панель:', targetPanel);
                    
                    // Активация категории
                    console.log('Хедер: Обновление активной категории');
                    menuCategories.forEach(function(cat, catIndex) {
                        console.log('Хедер: Удаление класса active с категории', catIndex);
                        cat.classList.remove('active');
                    });
                    console.log('Хедер: Добавление класса active на выбранную категорию', index);
                    category.classList.add('active');
                    
                    // Активация панели
                    console.log('Хедер: Обновление активной панели');
                    menuPanels.forEach(function(panel, panelIndex) {
                        console.log('Хедер: Обработка панели', panelIndex);
                        panel.classList.remove('active');
                        if (panel.getAttribute('data-panel') === targetPanel) {
                            console.log('Хедер: Активация соответствующей панели', panelIndex);
                            panel.classList.add('active');
                            // Анимация новой панели
                            console.log('Хедер: Применение анимации к панели');
                            panel.style.animation = 'fadeIn 300ms forwards';
                        }
                    });
                });
                
                // Навигация с клавиатуры
                console.log('Хедер: Добавление клавиатурной навигации для категории меню', index);
                category.addEventListener('keydown', function(e) {
                    console.log('Хедер: Событие keydown на категории', index, 'клавиша:', e.key);
                    const index = Array.from(menuCategories).indexOf(category);
                    let nextIndex;
                    
                    switch(e.key) {
                        case 'ArrowRight':
                            console.log('Хедер: Нажата клавиша ArrowRight на категории', index);
                            e.preventDefault();
                            nextIndex = index + 1 >= menuCategories.length ? 0 : index + 1;
                            console.log('Хедер: Перемещение фокуса на следующую категорию', nextIndex);
                            menuCategories[nextIndex].focus();
                            console.log('Хедер: Клик на следующую категорию', nextIndex);
                            menuCategories[nextIndex].click();
                            break;
                        case 'ArrowLeft':
                            console.log('Хедер: Нажата клавиша ArrowLeft на категории', index);
                            e.preventDefault();
                            nextIndex = index - 1 < 0 ? menuCategories.length - 1 : index - 1;
                            console.log('Хедер: Перемещение фокуса на предыдущую категорию', nextIndex);
                            menuCategories[nextIndex].focus();
                            console.log('Хедер: Клик на предыдущую категорию', nextIndex);
                            menuCategories[nextIndex].click();
                            break;
                    }
                });
            });
            
            // Активация первой панели и категории по умолчанию
            console.log('Хедер: Проверка наличия активной панели');
            if (!document.querySelector('.menu-panel.active')) {
                console.log('Хедер: Активная панель не найдена, активирую первую панель и категорию');
                const firstCategory = menuCategories[0];
                const firstPanel = menuPanels[0];
                
                if (firstCategory && firstPanel) {
                    console.log('Хедер: Активация первой категории и панели');
                    firstCategory.classList.add('active');
                    firstPanel.classList.add('active');
                } else {
                    console.log('Хедер: Первая категория или панель не найдены');
                }
            } else {
                console.log('Хедер: Активная панель уже существует');
            }
        } else {
            console.log('Хедер: Категории или панели меню не найдены');
        }
        
        // Обработка якорей в URL
        console.log('Хедер: Проверка наличия хэша в URL');
        if (window.location.hash) {
            console.log('Хедер: Обнаружен хэш в URL:', window.location.hash);
            const targetElement = document.querySelector(window.location.hash);
            if (targetElement) {
                console.log('Хедер: Целевой элемент для хэша найден, прокрутка к нему после задержки');
                setTimeout(function() {
                    console.log('Хедер: Прокрутка к целевому элементу');
                    targetElement.scrollIntoView({ behavior: 'smooth' });
                }, 500);
            } else {
                console.log('Хедер: Целевой элемент для хэша не найден');
            }
        } else {
            console.log('Хедер: В URL нет хэша');
        }
        
        console.log('Хедер: Инициализация завершена');
    });
    </script>
    
    <!-- ============================================= -->
<!-- HERO SECTION - ГЛАВНЫЙ ЭКРАН С ПРИВЛЕЧЕНИЕМ ВНИМАНИЯ -->
<!-- ============================================= -->
<section class="hero-section" id="main" itemscope itemtype="http://schema.org/WebPage">
    <div class="container">
        <div class="row justify-content-end align-items-center">
            <div class="col-lg-7">
                <div class="hero-content" itemprop="mainContentOfPage">
                    <h1 class="hero-title" importance="high" itemprop="headline">IT-аутсорсинг и IT-поддержка бизнеса в Москве и Московской области 24/7</h1>
                    <p class="hero-subtitle" itemprop="description">Сосредоточьтесь на развитии бизнеса и увеличивайте прибыль, доверив IT-поддержку сертифицированным профессионалам с опытом 15+ лет</p>
                    <div class="hero-actions">
                        <a href="#callback" class="btn btn-primary btn-lg popup-with-form" data-gtm="get-consultation-button">
                            <span>Получить бесплатную консультацию</span>
                            <i class="fa fa-arrow-right" aria-hidden="true"></i>
                        </a>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="hero-overlay" aria-hidden="true"></div>
    <div class="hero-particles" id="particles-js" aria-hidden="true"></div>
</section>

<!-- ============================================= -->
<!-- IT-УСЛУГИ ДЛЯ БИЗНЕСА - ОСНОВНЫЕ НАПРАВЛЕНИЯ -->
<!-- ============================================= -->
<section class="section giguslugi-section" id="it-services" itemscope itemtype="http://schema.org/Service">
    <div class="container">
        <div class="giguslugi-header">
            <h2 class="giguslugi-title" itemprop="name">Профессиональные <span class="giguslugi-title-accent">IT-услуги и IT-аутсорсинг</span> для бизнеса в Москве и Московской области 2025</h2>
            <p class="giguslugi-subtitle" itemprop="description">Комплексные IT-решения для эффективной работы, оптимизации и безопасности вашей компании от сертифицированных специалистов с круглосуточной поддержкой 24/7/365</p>
            <meta itemprop="serviceType" content="IT-услуги для бизнеса, IT-аутсорсинг, IT-поддержка 24/7" />
            <meta itemprop="areaServed" content="Москва, Московская область" />
        </div>
        
        <div class="giguslugi-grid">
            <!-- Услуга 1: Защищённый офис (приоритет 1) -->
            <div class="giguslugi-card giguslugi-card-accent" itemscope itemtype="http://schema.org/Service">
                <meta itemprop="serviceType" content="Кибербезопасность и защита данных для бизнеса" />
                <meta itemprop="areaServed" content="Москва, Московская область" />
                <div class="giguslugi-card-icon" aria-hidden="true">
                    <i class="fas fa-shield-alt"></i>
                </div>
                <div class="giguslugi-card-content">
                    <div class="giguslugi-card-badge">Топ-услуга 2025</div>
                    <h3 class="giguslugi-card-title" itemprop="name">Защищённый офис: комплексная IT-безопасность для бизнеса в Москве</h3>
                    <p class="giguslugi-card-description" itemprop="description">Комплексная защита конфиденциальных данных вашей компании от утечек, кибератак и внешних угроз с гарантией безопасности и соответствием ФЗ-152 и требованиям регуляторов</p>
                    <div class="giguslugi-card-features">
                        <span class="giguslugi-feature">Защита от кибератак и вирусов</span>
                        <span class="giguslugi-feature">DLP-системы контроля утечек</span>
                        <span class="giguslugi-feature">Корпоративные антивирусы с EDR</span>
                    </div>
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="price" content="15000" />
                        <meta itemprop="priceCurrency" content="RUB" />
                        <meta itemprop="priceValidUntil" content="2025-12-31" />
                        <span itemprop="availability" content="https://schema.org/InStock" class="giguslugi-price">от 15 000 ₽/мес</span>
                    </div>
                    <a href="virtual-office.html" class="giguslugi-button giguslugi-button-accent" itemprop="url" data-gtm="secure-office-button">
                        Защитить бизнес от киберугроз <i class="fas fa-arrow-right" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
            
            <!-- Услуга 2: IP-адреса при УСН 1% (приоритет 2) -->
            <div class="giguslugi-card" itemscope itemtype="http://schema.org/Service">
                <meta itemprop="serviceType" content="IP-адресация с налоговой оптимизацией для IT-компаний" />
                <meta itemprop="areaServed" content="Москва, Московская область" />
                <div class="giguslugi-card-icon" aria-hidden="true">
                    <i class="fas fa-network-wired"></i>
                </div>
                <div class="giguslugi-card-content">
                  <h3 class="giguslugi-card-title" itemprop="name">IP-адреса при УСН 1%: узаконенная налоговая оптимизация для IT-компаний</h3>
                  <p class="giguslugi-card-description" itemprop="description">Выгодные условия по предоставлению IPv4 и IPv6 адресов для IT-компаний на упрощённой системе налогообложения со ставкой всего 1% — экономия до 5% от оборота в 2025 году</p>
                  <div class="giguslugi-card-features">
                      <span class="giguslugi-feature">Узаконенная налоговая оптимизация</span>
                      <span class="giguslugi-feature">Полное соответствие НК РФ</span>
                      <span class="giguslugi-feature">Экономия до 5% IT-бюджета</span>
                  </div>
                  <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                      <meta itemprop="price" content="5000" />
                      <meta itemprop="priceCurrency" content="RUB" />
                      <meta itemprop="priceValidUntil" content="2025-12-31" />
                      <span itemprop="availability" content="https://schema.org/InStock" class="giguslugi-price">от 5 000 ₽/мес</span>
                  </div>
                  <a href="virtual-office.html" class="giguslugi-button" itemprop="url" data-gtm="ip-tax-optimization-button">
                      Сэкономить на IT-налогах <i class="fas fa-arrow-right" aria-hidden="true"></i>
                  </a>
              </div>
            </div>
            
            <!-- Услуга 3: IT-поддержка (приоритет 3) -->
            <div class="giguslugi-card" itemscope itemtype="http://schema.org/Service">
                <meta itemprop="serviceType" content="Техническая поддержка IT-инфраструктуры 24/7" />
                <meta itemprop="areaServed" content="Москва, Московская область" />
                <div class="giguslugi-card-icon" aria-hidden="true">
                    <i class="fas fa-headset"></i>
                </div>
                <div class="giguslugi-card-content">
                    <h3 class="giguslugi-card-title" itemprop="name">IT-поддержка бизнеса 24/7 в Москве и Московской области</h3>
                    <p class="giguslugi-card-description" itemprop="description">Оперативное решение технических проблем любой сложности, круглосуточная квалифицированная помощь вашим сотрудникам от сертифицированных IT-специалистов с SLA от 15 минут</p>
                    <div class="giguslugi-card-features">
                        <span class="giguslugi-feature">Реакция от 15 минут 24/7</span>
                        <span class="giguslugi-feature">Удалённое решение 92% проблем</span>
                        <span class="giguslugi-feature">Поддержка 24/7/365 без выходных</span>
                    </div>
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="price" content="12000" />
                        <meta itemprop="priceCurrency" content="RUB" />
                        <meta itemprop="priceValidUntil" content="2025-12-31" />
                        <span itemprop="availability" content="https://schema.org/InStock" class="giguslugi-price">от 12 000 ₽/мес</span>
                    </div>
                    <a href="it-support.html" class="giguslugi-button" itemprop="url" data-gtm="it-support-button">
                        Получить IT-поддержку 24/7 <i class="fas fa-arrow-right" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
            
            <!-- Услуга 4: Обслуживание серверов (приоритет 4) -->
            <div class="giguslugi-card" itemscope itemtype="http://schema.org/Service">
                <meta itemprop="serviceType" content="Серверное администрирование и обслуживание Windows/Linux" />
                <meta itemprop="areaServed" content="Москва, Московская область" />
                <div class="giguslugi-card-icon" aria-hidden="true">
                    <i class="fas fa-server"></i>
                </div>
                <div class="giguslugi-card-content">
                    <h3 class="giguslugi-card-title" itemprop="name">Обслуживание серверов Windows и Linux: профессиональное администрирование в Москве</h3>
                    <p class="giguslugi-card-description" itemprop="description">Профессиональная настройка, непрерывный мониторинг и квалифицированное обслуживание серверов Windows/Linux с обеспечением бесперебойной работы 24/7 и отказоустойчивостью 99.9%</p>
                    <div class="giguslugi-card-features">
                        <span class="giguslugi-feature">Мониторинг 24/7 с SMS-оповещением</span>
                        <span class="giguslugi-feature">Реагирование от 5 минут</span>
                        <span class="giguslugi-feature">Ежедневное резервное копирование</span>
                    </div>
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="price" content="15000" />
                        <meta itemprop="priceCurrency" content="RUB" />
                        <meta itemprop="priceValidUntil" content="2025-12-31" />
                        <span itemprop="availability" content="https://schema.org/InStock" class="giguslugi-price">от 15 000 ₽/мес</span>
                    </div>
                    <a href="obsluzhivanie-serverov.html" class="giguslugi-button" itemprop="url" data-gtm="server-maintenance-button">
                        Заказать обслуживание серверов <i class="fas fa-arrow-right" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
            
            <!-- Услуга 5: Системы видеонаблюдения (приоритет 5) -->
            <div class="giguslugi-card" itemscope itemtype="http://schema.org/Service">
                <meta itemprop="serviceType" content="Видеонаблюдение и системы безопасности с аналитикой" />
                <meta itemprop="areaServed" content="Москва, Московская область" />
                <div class="giguslugi-card-icon" aria-hidden="true">
                    <i class="fas fa-video"></i>
                </div>
                <div class="giguslugi-card-content">
                    <h3 class="giguslugi-card-title" itemprop="name">Системы видеонаблюдения для бизнеса в Москве с искусственным интеллектом</h3>
                    <p class="giguslugi-card-description" itemprop="description">Профессиональная установка и настройка IP-систем видеонаблюдения с распознаванием лиц, удалённым доступом, искусственным интеллектом и аналитикой для магазинов, офисов и предприятий</p>
                    <div class="giguslugi-card-features">
                        <span class="giguslugi-feature">4K Ultra HD качество видео</span>
                        <span class="giguslugi-feature">AI-распознавание лиц и событий</span>
                        <span class="giguslugi-feature">Облачная архивация до 30 дней</span>
                    </div>
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="price" content="25000" />
                        <meta itemprop="priceCurrency" content="RUB" />
                        <meta itemprop="priceValidUntil" content="2025-12-31" />
                        <span itemprop="availability" content="https://schema.org/InStock" class="giguslugi-price">от 25 000 ₽</span>
                    </div>
                    <a href="ustanovka-videonablyudeniya.html" class="giguslugi-button" itemprop="url" data-gtm="video-surveillance-button">
                        Установить видеонаблюдение с AI <i class="fas fa-arrow-right" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
            
            <!-- Услуга 6: Монтаж компьютерных сетей (приоритет 6) -->
            <div class="giguslugi-card" itemscope itemtype="http://schema.org/Service">
                <meta itemprop="serviceType" content="Проектирование и монтаж локальных сетей и СКС" />
                <meta itemprop="areaServed" content="Москва, Московская область" />
                <div class="giguslugi-card-icon" aria-hidden="true">
                    <i class="fas fa-network-wired"></i>
                </div>
                <div class="giguslugi-card-content">
                    <h3 class="giguslugi-card-title" itemprop="name">Монтаж компьютерных сетей и СКС в Москве под ключ с гарантией</h3>
                    <p class="giguslugi-card-description" itemprop="description">Профессиональное проектирование, прокладка и монтаж локальных компьютерных сетей (ЛВС) и структурированных кабельных систем (СКС) любой сложности с сертификацией и гарантией до 5 лет</p>
                    <div class="giguslugi-card-features">
                        <span class="giguslugi-feature">Скорость передачи от 10 Гбит/с</span>
                        <span class="giguslugi-feature">Сертифицированные материалы Cat.6A</span>
                        <span class="giguslugi-feature">Официальная гарантия до 5 лет</span>
                    </div>
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="price" content="450" />
                        <meta itemprop="priceCurrency" content="RUB" />
                        <meta itemprop="priceValidUntil" content="2025-12-31" />
                        <span itemprop="availability" content="https://schema.org/InStock" class="giguslugi-price">от 450 ₽/точка</span>
                    </div>
                    <a href="montazh-kompyuternykh-setey.html" class="giguslugi-button" itemprop="url" data-gtm="network-installation-button">
                        Рассчитать стоимость сети <i class="fas fa-arrow-right" aria-hidden="true"></i>
                    </a>
                </div>
            </div>
        </div>
        
        <div class="giguslugi-cta" itemscope itemtype="http://schema.org/Organization">
            <meta itemprop="name" content="IT-компания Pro-IT Solutions"/>
            <meta itemprop="telephone" content="+8(499)350-11-60"/>
            <meta itemprop="email" content="info@pro-it-solutions.ru"/>
            <h3 class="giguslugi-cta-title">Не нашли нужную IT-услугу для вашего бизнеса в Москве?</h3>
            <p class="giguslugi-cta-text">Свяжитесь с нами прямо сейчас, и сертифицированные IT-специалисты подберут индивидуальное технологическое решение под конкретные задачи вашего бизнеса и бюджет</p>
            <div class="giguslugi-contacts-info">
                <div class="giguslugi-contact-item" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
                    <i class="fas fa-map-marker-alt" aria-hidden="true"></i>
                    <span itemprop="addressLocality">Москва</span>, 
                    <span itemprop="streetAddress">ул. Технологическая, 15</span>, 
                    <span itemprop="postalCode">123456</span>
                </div>
                <div class="giguslugi-contact-item">
                    <i class="fas fa-phone-alt" aria-hidden="true"></i>
                    <a href="tel:+84993501160" itemprop="telephone">+8(499)350-11-60</a>
                </div>
                <div class="giguslugi-contact-item">
                    <i class="fas fa-envelope" aria-hidden="true"></i>
                    <a href="mailto:info@pro-it-solutions.ru" itemprop="email">info@pro-it-solutions.ru</a>
                </div>
                <div class="giguslugi-reviews">
                    <span itemscope itemtype="http://schema.org/AggregateRating">
                        <meta itemprop="ratingValue" content="4.8"/>
                        <meta itemprop="reviewCount" content="324"/>
                        <meta itemprop="bestRating" content="5"/>
                        <span class="giguslugi-rating"><i class="fas fa-star" aria-hidden="true"></i> 4.8</span>
                        <span class="giguslugi-reviews-count">324 отзыва на Яндекс.Картах</span>
                    </span>
                </div>
            </div>
            <a href="#callback" class="giguslugi-cta-button popup-with-form" onclick="gtag('event', 'click', {'event_category': 'button', 'event_label': 'consult_button'});" data-gtm="free-consultation-button">
              Получить бесплатную консультацию IT-эксперта <i class="fas fa-phone-alt" aria-hidden="true"></i>
          </a>
        </div>
    </div>

    <!-- Расширенная FAQ секция для SEO -->
    <div class="giguslugi-faq container" itemscope itemtype="https://schema.org/FAQPage">
        <h3 class="giguslugi-faq-title">Частые вопросы об IT-услугах для бизнеса в Москве</h3>
        
        <div class="giguslugi-faq-grid">
            <div class="giguslugi-faq-item" itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
                <h4 itemprop="name">Сколько стоит IT-поддержка для бизнеса в Москве в 2025 году?</h4>
                <div itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
                    <div itemprop="text">
                        <p>Стоимость IT-поддержки зависит от нескольких факторов: размера компании, количества рабочих мест, сложности IT-инфраструктуры и требуемого уровня SLA. Базовые тарифы начинаются от 12 000 рублей в месяц за обслуживание до 10 компьютеров. Для компаний среднего размера (10-50 рабочих мест) стоимость составляет от 25 000 до 60 000 рублей в месяц. Крупному бизнесу мы предлагаем индивидуальные тарифы с выделенной командой специалистов.</p>
                        <p>Мы предлагаем гибкие пакеты услуг под ваш бюджет с возможностью выбрать только необходимые сервисы. Для точного расчета стоимости IT-поддержки вашего бизнеса, пожалуйста, воспользуйтесь калькулятором на нашем сайте или свяжитесь с нашими специалистами.</p>
                    </div>
                </div>
            </div>
            
            <div class="giguslugi-faq-item" itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
                <h4 itemprop="name">Что такое защищенный офис и зачем он нужен современным компаниям?</h4>
                <div itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
                    <div itemprop="text">
                        <p>Защищенный офис — это комплексное IT-решение, объединяющее технические и организационные меры по обеспечению информационной безопасности компании. Оно включает в себя многоуровневую защиту от внешних угроз (вирусы, хакерские атаки), контроль утечек конфиденциальной информации (DLP-системы), управление доступом к корпоративным данным и соответствие требованиям законодательства (ФЗ-152 о персональных данных).</p>
                        <p>Современным компаниям защищенный офис необходим по нескольким причинам:</p>
                        <ul>
                            <li>Предотвращение финансовых потерь от кибератак и утечек данных</li>
                            <li>Защита деловой репутации и клиентской базы</li>
                            <li>Обеспечение непрерывности бизнес-процессов</li>
                            <li>Соответствие требованиям регуляторов и избежание штрафов</li>
                            <li>Безопасная работа сотрудников из любой точки (удаленный доступ)</li>
                        </ul>
                        <p>По статистике, более 67% российских компаний сталкивались с киберугрозами в 2024 году, поэтому инвестиции в информационную безопасность становятся не привилегией, а необходимостью для выживания бизнеса.</p>
                    </div>
                </div>
            </div>
            
            <div class="giguslugi-faq-item" itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
                <h4 itemprop="name">Как происходит монтаж компьютерных сетей и СКС в офисе под ключ?</h4>
                <div itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
                    <div itemprop="text">
                        <p>Монтаж компьютерных сетей и структурированных кабельных систем (СКС) включает следующие этапы:</p>
                        <ol>
                            <li><strong>Первичный осмотр и аудит помещения</strong> — специалисты проводят обследование офиса, оценивают особенности планировки, существующую инфраструктуру и ваши потребности.</li>
                            <li><strong>Проектирование сети</strong> — разрабатывается детальный проект с указанием расположения рабочих мест, серверного оборудования, коммутационных шкафов, кабельных трасс и расчетом необходимых материалов.</li>
                            <li><strong>Составление сметы и согласование</strong> — подготовка документации с подробной калькуляцией стоимости работ и материалов.</li>
                            <li><strong>Закупка оборудования и материалов</strong> — приобретение сертифицированных комплектующих от ведущих производителей с гарантией.</li>
                            <li><strong>Прокладка кабельных трасс</strong> — монтаж кабель-каналов, прокладка кабеля категории 5e, 6 или 6A в зависимости от требуемой скорости передачи данных.</li>
                            <li><strong>Установка и настройка активного оборудования</strong> — монтаж и конфигурация коммутаторов, маршрутизаторов, точек доступа Wi-Fi и других сетевых устройств.</li>
                            <li><strong>Тестирование и сертификация</strong> — проверка всех линий специальным оборудованием, измерение скорости передачи данных, выявление и устранение дефектов.</li>
                            <li><strong>Документирование и сдача работ</strong> — составление исполнительной документации, маркировка кабелей и портов, инструктаж персонала.</li>
                        </ol>
                        <p>Срок выполнения работ зависит от масштаба проекта: небольшой офис (до 10 рабочих мест) — от 2-3 дней, средний офис (10-50 рабочих мест) — 5-10 дней, крупный офис или производственное помещение — от 2 недель. На все выполненные работы предоставляется гарантия до 5 лет.</p>
                    </div>
                </div>
            </div>
            
            <div class="giguslugi-faq-item" itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
                <h4 itemprop="name">Какие преимущества дает IT-аутсорсинг по сравнению со штатным IT-отделом?</h4>
                <div itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
                    <div itemprop="text">
                        <p>IT-аутсорсинг предоставляет бизнесу ряд существенных преимуществ по сравнению с содержанием штатного IT-отдела:</p>
                        <ul>
                            <li><strong>Экономическая эффективность</strong> — снижение затрат на 30-40% за счет отсутствия расходов на зарплату, налоги, социальный пакет, обучение, рабочие места и оборудование для IT-персонала. Вы платите только за фактически предоставляемые услуги.</li>
                            <li><strong>Доступ к команде экспертов</strong> — вместо 1-2 штатных специалистов вы получаете доступ к целой команде профессионалов различного профиля (системные администраторы, сетевые инженеры, специалисты по безопасности, программисты).</li>
                            <li><strong>Гарантированный уровень сервиса (SLA)</strong> — юридически закрепленные обязательства по времени реакции и решения инцидентов, в отличие от неформальных договоренностей со штатным персоналом.</li>
                            <li><strong>Непрерывность обслуживания</strong> — IT-поддержка предоставляется 24/7/365 без перерывов на отпуска, больничные или обеденные перерывы.</li>
                            <li><strong>Масштабируемость</strong> — легкость изменения объема услуг при расширении или сокращении бизнеса без необходимости найма или сокращения персонала.</li>
                            <li><strong>Актуальные знания и технологии</strong> — аутсорсинговые компании постоянно повышают квалификацию специалистов и внедряют современные инструменты мониторинга и управления IT-инфраструктурой.</li>
                            <li><strong>Снижение рисков</strong> — профессиональное управление IT-рисками, проактивный мониторинг и резервное копирование данных.</li>
                            <li><strong>Фокус на основном бизнесе</strong> — руководство компании может сосредоточиться на стратегических задачах и развитии бизнеса вместо решения IT-проблем.</li>
                        </ul>
                        <p>По данным исследования Deloitte, 59% компаний выбирают IT-аутсорсинг для сокращения расходов, а 57% — для повышения качества обслуживания и доступа к экспертизе. В текущих экономических условиях 2025 года оптимизация IT-затрат с сохранением высокого уровня сервиса становится ключевым фактором конкурентоспособности.</p>
                    </div>
                </div>
            </div>
            
            <div class="giguslugi-faq-item" itemscope itemprop="mainEntity" itemtype="https://schema.org/Question">
                <h4 itemprop="name">Какие современные системы видеонаблюдения с искусственным интеллектом подходят для бизнеса?</h4>
                <div itemscope itemprop="acceptedAnswer" itemtype="https://schema.org/Answer">
                    <div itemprop="text">
                        <p>Современные системы видеонаблюдения с искусственным интеллектом (AI) предоставляют бизнесу расширенные аналитические возможности и повышенную безопасность. Наиболее эффективные решения 2025 года включают:</p>
                        <ul>
                            <li><strong>Системы распознавания лиц</strong> — идентифицируют сотрудников, клиентов и посетителей, создают базу известных лиц, определяют VIP-клиентов или нежелательных посетителей. Точность распознавания в новейших системах достигает 99.8%.</li>
                            <li><strong>Детекторы аномального поведения</strong> — фиксируют необычные действия (драки, падения, скопления людей) и автоматически оповещают службу безопасности.</li>
                            <li><strong>Аналитика покупательского поведения</strong> — отслеживает перемещения посетителей по торговому залу, определяет горячие зоны, анализирует конверсию, подсчитывает посетителей.</li>
                            <li><strong>Контроль кассовых операций</strong> — сопоставляет видеоряд с данными кассовых терминалов для выявления махинаций.</li>
                            <li><strong>Распознавание объектов и ситуаций</strong> — определяет оставленные предметы, контролирует наличие средств индивидуальной защиты на производстве, выявляет нарушения техники безопасности.</li>
                            <li><strong>Облачное хранение и аналитика</strong> — обеспечивает безопасное хранение видеоархива с доступом из любой точки мира, применяет AI-алгоритмы для интеллектуального поиска по видеоархиву.</li>
                        </ul>
                        <p>Для разных типов бизнеса оптимальны различные конфигурации:</p>
                        <p><strong>Для розничных магазинов:</strong> комбинация камер с подсчетом посетителей, тепловыми картами и интеграцией с кассовыми терминалами.</p>
                        <p><strong>Для офисов:</strong> системы контроля доступа с распознаванием лиц и мониторингом рабочего времени.</p>
                        <p><strong>Для производств:</strong> камеры с функциями контроля технологических процессов, соблюдения техники безопасности и охраны периметра.</p>
                        <p><strong>Для складов:</strong> системы с функциями отслеживания товаров, контроля погрузки/разгрузки и предотвращения хищений.</p>
                        <p>Стоимость внедрения интеллектуальных систем видеонаблюдения начинается от 25 000 рублей и зависит от площади объекта, количества камер и требуемых аналитических функций. Срок окупаемости таких систем составляет от 6 до 18 месяцев за счет сокращения потерь и оптимизации бизнес-процессов.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- ============================================= -->
<!-- ПРЕИМУЩЕСТВА "ЗАЩИЩЕННОГО ОФИСА"             -->
<!-- ============================================= -->
<section class="advantage-section" id="protected-office">
    <div class="container">
        <div class="section-header text-center">
            <h2 class="section-title-black" itemprop="headline"><strong>Защищённый офис</strong> &ndash; виртуальные рабочие места для безопасного бизнеса</h2>
            <div class="heading-container">
                <div class="heading-separator">
                  <span class="separator-line" aria-hidden="true"></span>
                  <span class="separator-element" aria-hidden="true"></span>
                  <span class="separator-line" aria-hidden="true"></span>
                </div>
            </div>
            <p class="section-subtitle" itemprop="description">Современное IT-решение для безопасной и эффективной работы из любой точки мира с максимальной защитой данных</p>
        </div>
        
        <div class="row">
            <div class="col-lg-12">
                <div class="advantage-intro" itemscope itemtype="http://schema.org/Product">
                    <meta itemprop="name" content="Защищённый офис - виртуальные рабочие места"/>
                    <p itemprop="description">Виртуальные рабочие места "Защищённый офис" - это современное облачное решение, обеспечивающее безопасный доступ к корпоративным данным и приложениям из любой точки мира. Высокий уровень защиты информации, быстрое развертывание и простота использования делают эту услугу оптимальным выбором для компаний любого масштаба в 2025 году.</p>
                    
                    <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                        <meta itemprop="price" content="1200" />
                        <meta itemprop="priceCurrency" content="RUB" />
                        <meta itemprop="priceValidUntil" content="2025-12-31" />
                        <meta itemprop="availability" content="https://schema.org/InStock" />
                    </div>

                    <div class="cta-container">
                        <a href="bezopasniy-office.html" class="btn btn-primary cta-button" data-gtm="security-guide-button">
                            <span>Получить руководство по кибербезопасности</span>
                            <i class="fa fa-shield" aria-hidden="true"></i>
                        </a>
                    </div>

                    <div class="advantage-highlights">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="highlight-item">
                                    <div class="highlight-icon" aria-hidden="true">
                                        <i class="fa fa-users"></i>
                                    </div>
                                    <div class="highlight-content">
                                        <p>Индивидуальный подход к каждому клиенту с учетом специфики бизнеса и отрасли - мы нацелены на активное сотрудничество и с удовольствием делимся экспертизой.</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="highlight-item">
                                    <div class="highlight-icon" aria-hidden="true">
                                        <i class="fa fa-thumbs-up"></i>
                                    </div>
                                    <div class="highlight-content">
                                        <p>Гибкость IT-решений под конкретные задачи - мы разрабатываем индивидуальные стратегии защиты информации с учетом бюджета и приоритетов.</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="highlight-item">
                                    <div class="highlight-icon" aria-hidden="true">
                                        <i class="fa fa-line-chart"></i>
                                    </div>
                                    <div class="highlight-content">
                                        <p>Многовариантное сотрудничество - от точечных консультаций по IT-безопасности до комплексного аудита и внедрения защищенной инфраструктуры.</p>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="highlight-item">
                                    <div class="highlight-icon" aria-hidden="true">
                                        <i class="fa fa-building"></i>
                                    </div>
                                    <div class="highlight-content">
                                        <p>Масштабируемость решений - работаем как с крупными холдингами, так и со средним и малым бизнесом, адаптируя технологии под любой размер компании.</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Tabs Component -->
                <div class="tabs-container">
                    <div class="tabs-navigation">
                        <button class="tab-button" data-tab="tab2">
                            <i class="fas fa-briefcase" aria-hidden="true"></i>
                            <span>Для владельцев компаний</span>
                        </button>
                        <button class="tab-button active" data-tab="tab1">
                            <i class="fas fa-calculator" aria-hidden="true"></i>
                            <span>Для бухгалтеров</span>
                        </button>
                        <button class="tab-button" data-tab="tab3">
                            <i class="fas fa-headset" aria-hidden="true"></i>
                            <span>Для IT-инженеров</span>
                        </button>
                    </div>
                    
                    <div class="tabs-content">
                        <!-- Tab 1 Content -->
                        <div class="tab-panel active" id="tab1">
                            <div class="row align-items-center">
                                <div class="col-lg-6">
                                    <div class="tab-image">
                                        <img src="bugalter.jpg" alt="IT-услуги для бухгалтеров компаний в Москве" width="550" height="400" loading="lazy">
                                        <div class="tab-image-overlay" aria-hidden="true"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="tab-content-inner">
                                        <h3 class="tab-title">Преимущества IT-аутсорсинга для бухгалтеров компаний</h3>
                                        <ul class="advantage-list">
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Очевидность результата и прозрачная отчетность</h4>
                                                    <p>Вы просто ставите задачу, не вникая в технические сложности. Квалификация специалистов и системный подход позволяют нам контролировать все стадии работы и предоставлять понятные отчеты по выполненным работам и использованным ресурсам.</p>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Максимальная безопасность финансовых данных</h4>
                                                    <p>Утечка финансовой информации недопустима для любой компании. Мы внедряем системы защиты бухгалтерских данных, которые не мешают повседневной работе, но обеспечивают надежную защиту от внешних угроз и внутренних утечек.</p>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Оперативная реакция и приоритетное обслуживание</h4>
                                                    <p>Вам не придется убеждать штатного системного администратора в важности финансовых программ. IT-аутсорсинг гарантирует быстрое реагирование на проблемы с 1С, клиент-банками и другими критичными для бухгалтерии системами.</p>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Tab 2 Content -->
                        <div class="tab-panel" id="tab2">
                            <div class="row align-items-center">
                                <div class="col-lg-6">
                                    <div class="tab-image">
                                        <img src="ceo.jpg" alt="IT-услуги для директоров и владельцев бизнеса в Москве" width="550" height="400" loading="lazy">
                                        <div class="tab-image-overlay" aria-hidden="true"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="tab-content-inner">
                                        <h3 class="tab-title">Преимущества IT-аутсорсинга для директоров и владельцев бизнеса</h3>
                                        <ul class="advantage-list">
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Доступ к передовым технологиям без капитальных затрат</h4>
                                                    <p>IT-аутсорсинг позволяет использовать инновационные технологии и услуги квалифицированных специалистов различных направлений максимально рационально, не переплачивая за избыточный функционал и не инвестируя в дорогостоящее оборудование.</p>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Существенная экономия IT-бюджета до 40%</h4>
                                                    <p>Вы платите фиксированную стоимость по договору, экономя на зарплатах, налогах, соцпакетах, обучении персонала и оборудовании рабочих мест. Вас не касаются отпуска, больничные и оплата сверхурочных IT-специалистов.</p>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Юридическая и финансовая ответственность подрядчика</h4>
                                                    <p>Мы несем полную финансовую ответственность за результат согласно SLA, в то время как штатный IT-сотрудник отвечает за свою работу только в рамках трудового законодательства, которое серьезно ограничивает возможные санкции.</p>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <!-- Tab 3 Content -->
                        <div class="tab-panel" id="tab3">
                            <div class="row align-items-center">
                                <div class="col-lg-6">
                                    <div class="tab-image">
                                        <img src="it.jpg" alt="IT-аутсорсинг для IT-инженеров и технических специалистов в Москве" width="550" height="400" loading="lazy">
                                        <div class="tab-image-overlay" aria-hidden="true"></div>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="tab-content-inner">
                                        <h3 class="tab-title">Преимущества сотрудничества с IT-аутсорсером для IT-инженеров</h3>
                                        <ul class="advantage-list">
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Делегирование рутинных задач и заявок первой линии</h4>
                                                    <p>Поддержка пользователей и рутинные операции занимают большую часть времени IT-специалистов. Делегируя эти задачи на аутсорсинг, вы сможете сосредоточиться на стратегических проектах и развитии IT-инфраструктуры.</p>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Концентрация на профильных задачах и проектах</h4>
                                                    <p>От штатного IT-инженера часто требуют выполнения разноплановых функций, не входящих в его компетенцию. Совместная работа с аутсорсером позволяет четко разграничить обязанности и сконцентрироваться на ключевых задачах.</p>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="advantage-icon" aria-hidden="true">
                                                    <i class="fa fa-check-circle"></i>
                                                </div>
                                                <div class="advantage-text">
                                                    <h4>Доступ к экспертизе и актуальным технологиям</h4>
                                                    <p>Возможность обращаться за консультацией к узким специалистам (безопасность, сети, базы данных) и быть в курсе последних IT-тенденций. Мы нацелены на активное профессиональное сотрудничество и обмен опытом.</p>
                                                </div>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Блок IT-аутсорсинга как второстепенное направление -->
        <div class="secondary-service-container">
            <div class="row">
                <div class="col-lg-12">
                    <div class="secondary-service" itemscope itemtype="http://schema.org/Service">
                        <meta itemprop="serviceType" content="IT-аутсорсинг для бизнеса" />
                        <div class="secondary-service-icon" aria-hidden="true">
                            <i class="fa fa-cogs"></i>
                        </div>
                        <h3 class="secondary-title" itemprop="name">IT-аутсорсинг в Москве &ndash; современная модель ведения бизнеса в 2025 году</h3>
                        <p class="secondary-subtitle" itemprop="description">Доверьте управление IT-инфраструктурой сертифицированным профессионалам и сосредоточьтесь на основных бизнес-процессах</p>
                        <p class="secondary-description">С каждым годом число московских компаний, выбравших IT-аутсорсинг, растет экспоненциально. По данным исследований, более 67% предприятий малого и среднего бизнеса в Москве и области уже отказались от содержания собственного IT-отдела. Благодаря профессиональному IT-аутсорсингу бизнес успешно развивается, избавляясь от затрат на штатных IT-специалистов, и получает взамен качественное и оперативное решение любых вопросов, связанных с цифровой инфраструктурой.</p>
                        <div class="secondary-service-features">
                            <div class="feature-tag">Круглосуточная IT-поддержка 24/7</div>
                            <div class="feature-tag">Снижение IT-затрат до 40%</div>
                            <div class="feature-tag">Гибкие тарифы от 12 000 ₽/мес</div>
                        </div>
                        <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">
                            <meta itemprop="price" content="12000" />
                            <meta itemprop="priceCurrency" content="RUB" />
                            <meta itemprop="priceValidUntil" content="2025-12-31" />
                            <meta itemprop="availability" content="https://schema.org/InStock" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>


<!-- ============================================= -->
<!-- СТАТИСТИКА КОМПАНИИ                           -->
<!-- ============================================= -->
<section class="statistics-section" id="digits" itemscope itemtype="http://schema.org/Organization">
    <meta itemprop="name" content="IT-компания Pro-IT Solutions" />
    <meta itemprop="url" content="https://pro-it-solutions.ru/" />
    <meta itemprop="email" content="info@pro-it-solutions.ru" />
    <meta itemprop="telephone" content="8(499)350-11-60" />
    <div class="container">
        <div class="section-header text-center">
            <div class="heading-container dark">
                <div class="heading-separator">
                  <span class="separator-line" aria-hidden="true"></span>
                  <span class="separator-element" aria-hidden="true"></span>
                  <span class="separator-line" aria-hidden="true"></span>
                </div>
                <h2 itemprop="slogan">IT-компания в цифрах: наши достижения в Москве</h2>
              </div>
            <p class="section-subtitle">Реальные результаты нашей работы на рынке IT-услуг Москвы и Московской области за 15 лет</p>
        </div>
        
        <div class="row justify-content-center">
            <div class="col-lg-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-icon" aria-hidden="true">
                        <i class="fa fa-calendar"></i>
                    </div>
                    <div class="stat-number" id="num1" data-value="15">15</div>
                    <div class="stat-title">лет успешной работы на IT-рынке Москвы</div>
                </div>
            </div>
            
            <div class="col-lg-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-icon" aria-hidden="true">
                        <i class="fa fa-users"></i>
                    </div>
                    <div class="stat-number" id="num2" data-value="38">38</div>
                    <div class="stat-title">сертифицированных IT-специалистов в штате</div>
                </div>
            </div>
            
            <div class="col-lg-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-icon" aria-hidden="true">
                        <i class="fa fa-handshake"></i>
                    </div>
                    <div class="stat-number" id="num3" data-value="450">450+</div>
                    <div class="stat-title">довольных клиентов в Москве и области</div>
                </div>
            </div>
            
            <div class="col-lg-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-icon" aria-hidden="true">
                        <i class="fa fa-desktop"></i>
                    </div>
                    <div class="stat-number" id="num4" data-value="5716">5716</div>
                    <div class="stat-title">компьютеров на постоянном IT-обслуживании</div>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- ============================================= -->
<!-- НАШИ КЛИЕНТЫ                                  -->
<!-- ============================================= -->
<section class="clients-section" id="clients">
    <div class="container">
        <div class="section-header text-center">
            <div class="heading-container">
                <div class="heading-separator">
                  <span class="separator-line" aria-hidden="true"></span>
                  <span class="separator-element" aria-hidden="true"></span>
                  <span class="separator-line" aria-hidden="true"></span>
                </div>
                <h2>Нам доверяют IT-инфраструктуру с 2010 года</h2>
              </div>
            <p class="section-subtitle">Крупные компании и организации в Москве, которые выбрали нас своим надежным IT-партнером</p>
        </div>
        
        <div class="clients-carousel owl-carousel" itemscope itemtype="http://schema.org/ItemList">
            <meta itemprop="name" content="Клиенты IT-компании Pro-IT Solutions" />
            <meta itemprop="itemListOrder" content="Unordered" />
            <meta itemprop="numberOfItems" content="15" />
            
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Альфа Логистик" />
                <img src="logos/Alfa-Logistic%20LOGO%2075DPI.png" alt="IT-обслуживание компании Альфа Логистик в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Эталон" />
                <img src="logos/Etalon.png" alt="IT-поддержка компании Эталон в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Хотлайн" />
                <img src="logos/Hotline.png" alt="IT-аутсорсинг для Хотлайн в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Новогорск" />
                <img src="logos/Novogorsk-2.png" alt="IT-услуги для компании Новогорск в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="ВинтХим" />
                <img src="logos/VintHim.png" alt="Обслуживание серверов компании ВинтХим в Московской области" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Аматек" />
                <img src="logos/%D0%B0%D0%BC%D0%B0%D1%82%D0%B5%D0%BA.png" alt="IT-поддержка компании Аматек 24/7 в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Клик Ресурс" />
                <img src="logos/%D0%BA%D0%BB%D0%B8%D0%BA%20%D1%80%D0%B5%D1%81%D1%83%D1%80%D1%81.png" alt="Защищенный офис для компании Клик Ресурс в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Максидент" />
                <img src="logos/максидент.png" alt="IT-обслуживание сети клиник Максидент в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Отель Весна" />
                <img src="logos/отель весна.png" alt="IT-инфраструктура отеля Весна в Подмосковье" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Ремэкспо" />
                <img src="logos/ремэкспо.png" alt="IT-сервис для компании Ремэкспо в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Спортмакс" />
                <img src="logos/спорт макс.png" alt="IT-аутсорсинг для сети фитнес-клубов Спортмакс в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Стандарты Аудита" />
                <img src="logos/стандарты аудита.png" alt="IT-безопасность для компании Стандарты Аудита в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="СЭС" />
                <img src="logos/сэс.png" alt="IT-поддержка Московской СЭС" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="Теннис-First" />
                <img src="logos/тенис first.png" alt="IT-обслуживание теннисного клуба Теннис-First в Москве" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
            <div class="client-logo" itemprop="itemListElement" itemscope itemtype="http://schema.org/Organization">
                <meta itemprop="name" content="ТХЦ" />
                <img src="logos/тхц.png" alt="Комплексные IT-услуги для ТХЦ в Московской области" width="200" height="100" loading="lazy" itemprop="logo">
            </div>
        </div>
    </div>
</section>

<section class="ind-contact-section">
  <div class="ind-contact-overlay"></div>
  <div class="ind-contact-main">
      <div class="ind-contact-container">
          <div class="ind-contact-form">
              <h2 class="ind-contact-form-title">Наши контакты</h2>
              <p class="ind-contact-form-description">Остались вопросы? Задайте их нашему менеджеру, и мы свяжемся с вами в ближайшее время</p>
              <form id="telegramForm"> <!-- Добавляем тег form с id -->
                <div class="ind-contact-inputs">
                    <input type="text" id="userName" placeholder="Ваше имя" required>
                    <input type="email" id="userEmail" placeholder="E-mail" required>
                    <input type="tel" id="userPhone" placeholder="Телефон" required>
                    <textarea id="userMessage" placeholder="Ваш вопрос" required></textarea>
                    <!-- Блок reCAPTCHA временно удален -->
                    <button type="submit" class="ind-contact-submit">Отправить</button>
                </div>
              </form>
              <div class="ind-contact-social-links">
                  <a href="javascript:void(0)" class="ind-contact-social-link">
                      <i class="fab fa-telegram"></i>
                  </a>
                  <a href="javascript:void(0)" class="ind-contact-social-link">
                      <i class="fab fa-vk"></i>
                  </a>
                  <a href="javascript:void(0)" class="ind-contact-social-link">
                      <i class="fab fa-whatsapp"></i>
                  </a>
              </div>
          </div>
          <div class="ind-contact-map">
              <iframe
                  src="https://yandex.ru/map-widget/v1/?ll=37.653694%2C55.819090&z=16&mode=search&oid=1252968732&ol=biz&source=main_page"
                  width="560"
                  height="400"
                  frameborder="1"
                  allowfullscreen="true">
              </iframe>
          </div>
      </div>
  </div>
</section>

<script>/**
    /**
 * FormSender - Отправка данных из HTML-формы в Telegram
 * Версия 3.2.0 (исправленная)
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log('[FormSender] Инициализация скрипта отправки формы в Telegram');
    
    // Конфигурация
    console.log('[FormSender] Загрузка конфигурации');
    const CONFIG = {
        // Настройки Telegram-бота
        telegram: {
            botToken: '7813140158:AAHm1-JG4KDjHTb83zNieLAyqy8-MEu6FwY',
            chatId: '-1001940374630'
        },
        
        // Селекторы
        selectors: {
            form: '#telegramForm',
            name: '#userName',
            email: '#userEmail',
            phone: '#userPhone',
            message: '#userMessage',
            submitButton: '.ind-contact-submit'
        },
        
        // Сообщения
        messages: {
            sending: 'Отправка...',
            success: 'Сообщение успешно отправлено! Мы свяжемся с вами в ближайшее время.',
            error: 'Произошла ошибка при отправке сообщения. Пожалуйста, попробуйте позже.',
            nameRequired: 'Пожалуйста, введите ваше имя',
            phoneRequired: 'Пожалуйста, введите номер телефона',
            emailInvalid: 'Пожалуйста, введите корректный email адрес',
            phoneInvalid: 'Пожалуйста, введите корректный номер телефона'
        },
        
        // Повторные попытки при ошибке
        retry: {
            enabled: true,
            maxAttempts: 3,
            delay: 2000 // мс
        },
        
        // Таймаут запроса
        timeout: 15000 // мс
    };
    console.log('[FormSender] Конфигурация загружена успешно');
    
    // Находим форму
    console.log('[FormSender] Поиск формы на странице по селектору', CONFIG.selectors.form);
    const form = document.querySelector(CONFIG.selectors.form);
    
    if (!form) {
        console.error('[FormSender] Ошибка: Форма не найдена на странице');
        return;
    }
    console.log('[FormSender] Форма успешно найдена');
    
    // Добавляем обработчик отправки формы
    console.log('[FormSender] Добавление обработчика отправки формы');
    form.addEventListener('submit', function(e) {
        console.log('[FormSender] Событие отправки формы активировано');
        e.preventDefault();
        console.log('[FormSender] Стандартная отправка формы предотвращена');
        
        // Очищаем предыдущие сообщения об ошибках
        console.log('[FormSender] Очистка предыдущих сообщений об ошибках');
        clearFormErrors();
        
        // Получаем данные из формы
        console.log('[FormSender] Получение данных из формы');
        const formData = {
            name: getFieldValue(CONFIG.selectors.name),
            email: getFieldValue(CONFIG.selectors.email),
            phone: getFieldValue(CONFIG.selectors.phone),
            message: getFieldValue(CONFIG.selectors.message)
        };
        console.log('[FormSender] Данные формы получены:', formData);
        
        // Валидируем данные
        console.log('[FormSender] Начало валидации данных формы');
        if (!validateForm(formData)) {
            console.log('[FormSender] Валидация не пройдена, отправка отменена');
            return;
        }
        console.log('[FormSender] Валидация успешно пройдена');
        
        // Получаем ссылку на кнопку отправки
        console.log('[FormSender] Получение ссылки на кнопку отправки');
        const submitButton = form.querySelector(CONFIG.selectors.submitButton);
        const originalButtonText = submitButton ? submitButton.textContent : 'Отправить';
        console.log('[FormSender] Оригинальный текст кнопки сохранен:', originalButtonText);
        
        // Блокируем кнопку и показываем статус отправки
        if (submitButton) {
            console.log('[FormSender] Блокировка кнопки отправки');
            submitButton.disabled = true;
            submitButton.textContent = CONFIG.messages.sending;
        }
        
        // Отправляем данные
        console.log('[FormSender] Начало процесса отправки данных в Telegram');
        sendToTelegram(formData)
            .then(() => {
                console.log('[FormSender] Отправка успешно выполнена');
                // Показываем сообщение об успехе
                console.log('[FormSender] Отображение сообщения об успешной отправке');
                showNotification(CONFIG.messages.success, 'success');
                // Сбрасываем форму
                console.log('[FormSender] Сброс формы');
                form.reset();
            })
            .catch(error => {
                console.error('[FormSender] Ошибка отправки:', error.message);
                console.log('[FormSender] Отображение сообщения об ошибке');
                showNotification(CONFIG.messages.error, 'error');
            })
            .finally(() => {
                console.log('[FormSender] Завершение процесса отправки');
                // Восстанавливаем кнопку
                if (submitButton) {
                    console.log('[FormSender] Восстановление кнопки отправки');
                    submitButton.disabled = false;
                    submitButton.textContent = originalButtonText;
                }
            });
    });
    
    /**
     * Отправляет данные в Telegram с повторными попытками
     */
    async function sendToTelegram(data) {
        console.log('[FormSender] Запуск функции отправки в Telegram');
        let attempts = 0;
        let lastError = null;
        
        while (attempts < CONFIG.retry.maxAttempts) {
            attempts++;
            console.log(`[FormSender] Попытка отправки #${attempts} из ${CONFIG.retry.maxAttempts}`);
            
            try {
                // Формируем сообщение
                console.log('[FormSender] Форматирование сообщения для Telegram');
                const message = formatTelegramMessage(data);
                console.log('[FormSender] Сообщение сформировано');
                
                // Используем fetch с таймаутом
                console.log(`[FormSender] Инициализация запроса с таймаутом ${CONFIG.timeout}мс`);
                const controller = new AbortController();
                const timeoutId = setTimeout(() => controller.abort(), CONFIG.timeout);
                
                console.log('[FormSender] Отправка HTTP запроса к Telegram API');
                const response = await fetch(`https://api.telegram.org/bot${CONFIG.telegram.botToken}/sendMessage`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        chat_id: CONFIG.telegram.chatId,
                        text: message,
                        parse_mode: 'HTML'
                    }),
                    signal: controller.signal
                });
                
                clearTimeout(timeoutId);
                console.log('[FormSender] Таймер запроса очищен');
                
                // Проверяем тип контента до парсинга
                console.log('[FormSender] Проверка типа контента ответа');
                const contentType = response.headers.get('content-type');
                console.log('[FormSender] Тип контента:', contentType);
                
                if (!response.ok) {
                    console.log(`[FormSender] Получен ответ с ошибкой: ${response.status} ${response.statusText}`);
                    // Если получили ошибку, обрабатываем в зависимости от типа контента
                    if (contentType && contentType.includes('application/json')) {
                        console.log('[FormSender] Получен JSON-ответ с ошибкой, парсинг...');
                        const errorData = await response.json();
                        throw new Error(`Ошибка API: ${errorData.description || response.statusText}`);
                    } else {
                        console.log('[FormSender] Получен текстовый ответ с ошибкой, чтение...');
                        const text = await response.text();
                        throw new Error(`Ошибка сервера (${response.status}): ${text.substring(0, 100)}`);
                    }
                }
                
                // Проверяем, что ответ действительно JSON
                console.log('[FormSender] Проверка формата ответа');
                if (!contentType || !contentType.includes('application/json')) {
                    console.log('[FormSender] Ответ не в формате JSON, чтение текста...');
                    const text = await response.text();
                    throw new Error('Сервер вернул не JSON ответ');
                }
                
                console.log('[FormSender] Парсинг JSON-ответа');
                const result = await response.json();
                
                if (!result.ok) {
                    console.log('[FormSender] API вернул ошибку в JSON-ответе');
                    throw new Error(result.description || 'Неизвестная ошибка API');
                }
                
                // Если все успешно, возвращаем результат
                console.log('[FormSender] Сообщение успешно отправлено в Telegram');
                return result;
                
            } catch (error) {
                console.log(`[FormSender] Ошибка при отправке: ${error.message}`);
                lastError = error;
                
                // Если это последняя попытка или ошибка таймаута, прекращаем попытки
                if (attempts >= CONFIG.retry.maxAttempts || error.name === 'AbortError') {
                    console.log('[FormSender] Прекращение попыток:', 
                        error.name === 'AbortError' ? 'таймаут' : 'достигнут лимит попыток');
                    break;
                }
                
                // Пауза перед следующей попыткой
                console.log(`[FormSender] Ожидание ${CONFIG.retry.delay}мс перед следующей попыткой`);
                await new Promise(resolve => setTimeout(resolve, CONFIG.retry.delay));
            }
        }
        
        // Если все попытки неудачны, выбрасываем последнюю ошибку
        console.log('[FormSender] Все попытки отправки неудачны');
        throw lastError || new Error('Не удалось отправить сообщение после нескольких попыток');
    }
    
    /**
     * Форматирует сообщение для отправки в Telegram
     */
    function formatTelegramMessage(data) {
        console.log('[FormSender] Форматирование сообщения для Telegram');
        
        // Получаем User-Agent информацию
        console.log('[FormSender] Получение данных User-Agent');
        const userAgent = navigator.userAgent;
        
        // Определяем тип устройства
        console.log('[FormSender] Определение типа устройства');
        const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent);
        const deviceType = isMobile ? 'Мобильное устройство' : 'Десктоп';
        console.log('[FormSender] Тип устройства:', deviceType);
        
        // Собираем данные о браузере и системе
        console.log('[FormSender] Сбор информации о браузере');
        const browserInfo = getBrowserInfo();
        console.log('[FormSender] Информация о браузере:', browserInfo);
        
        // Получаем данные о экране
        console.log('[FormSender] Получение данных о экране');
        const screenResolution = `${window.screen.width}x${window.screen.height}`;
        const colorDepth = window.screen.colorDepth;
        
        // Получаем языковые настройки и часовой пояс
        console.log('[FormSender] Получение языковых настроек и часового пояса');
        const language = navigator.language || navigator.userLanguage;
        const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;
        
        // Получаем referrer - откуда пришел пользователь
        console.log('[FormSender] Получение referrer');
        const referrer = document.referrer || 'Прямой переход';
        
        // Собираем UTM-метки
        console.log('[FormSender] Сбор UTM-меток');
        const urlParams = new URLSearchParams(window.location.search);
        const utmSource = urlParams.get('utm_source') || 'Не указано';
        const utmMedium = urlParams.get('utm_medium') || 'Не указано';
        const utmCampaign = urlParams.get('utm_campaign') || 'Не указано';
        const utmContent = urlParams.get('utm_content') || 'Не указано';
        const utmTerm = urlParams.get('utm_term') || 'Не указано';
        console.log('[FormSender] UTM-метки получены');
        
        // Пытаемся получить данные о сессии
        console.log('[FormSender] Получение данных о сессии');
        const visitCount = getVisitCount();
        const sessionDuration = getSessionDuration();
        
        // Дополнительно проверяем возможности браузера
        console.log('[FormSender] Проверка дополнительных возможностей браузера');
        const cookiesEnabled = navigator.cookieEnabled ? 'Да' : 'Нет';
        const doNotTrack = navigator.doNotTrack ? 'Включено' : 'Отключено';
        
        console.log('[FormSender] Формирование финального текста сообщения');
        return `🔔 <b>Новая заявка с сайта!</b>\n\n` +
               `👤 <b>Имя:</b> ${escapeHtml(data.name)}\n` +
               `📧 <b>Email:</b> ${escapeHtml(data.email) || 'Не указан'}\n` +
               `📞 <b>Телефон:</b> ${escapeHtml(data.phone)}\n\n` +
               `💬 <b>Сообщение:</b>\n${escapeHtml(data.message) || 'Без сообщения'}\n\n` +
               
               `📊 <b>Маркетинговые данные:</b>\n` +
               `🌐 <b>Текущая страница:</b> ${window.location.href}\n` +
               `↩️ <b>Источник перехода:</b> ${referrer}\n` +
               `📈 <b>UTM-метки:</b>\n` +
               `   • Source: ${utmSource}\n` +
               `   • Medium: ${utmMedium}\n` +
               `   • Campaign: ${utmCampaign}\n` +
               `   • Content: ${utmContent}\n` +
               `   • Term: ${utmTerm}\n` +
               
               `💻 <b>Технические данные:</b>\n` +
               `🖥️ <b>Устройство:</b> ${deviceType}\n` +
               `🌍 <b>ОС:</b> ${browserInfo.os}\n` +
               `🌐 <b>Браузер:</b> ${browserInfo.browser} ${browserInfo.version}\n` +
               `🔧 <b>Разрешение экрана:</b> ${screenResolution}, ${colorDepth}bit\n` +
               `🗣️ <b>Язык:</b> ${language}\n` +
               `🕒 <b>Часовой пояс:</b> ${timezone}\n` +
               `🍪 <b>Cookies разрешены:</b> ${cookiesEnabled}\n` +
               `🛑 <b>Do Not Track:</b> ${doNotTrack}\n` +
               
               `📱 <b>User-Agent:</b> ${userAgent}\n` +
               
               `📔 <b>Информация о сессии:</b>\n` +
               `🔄 <b>Количество посещений:</b> ${visitCount}\n` +
               `⏱ <b>Продолжительность сессии:</b> ${sessionDuration}\n` +
               `⌚ <b>Дата и время отправки:</b> ${new Date().toLocaleString()}\n` +
               `🖥️ <b>IP-адрес:</b> Необходим серверный скрипт\n` +
               
               `🔗 <b>ID сеанса:</b> ${generateSessionId()}`;
    }

    // Вспомогательные функции
    function getBrowserInfo() {
        console.log('[FormSender] Запуск определения информации о браузере');
        const ua = navigator.userAgent;
        let browser = "Неизвестно";
        let version = "Неизвестно";
        let os = "Неизвестно";
        
        // Определяем ОС
        console.log('[FormSender] Определение операционной системы');
        if (/Windows/.test(ua)) {
            os = "Windows";
            console.log('[FormSender] Определена ОС Windows');
        }
        else if (/Macintosh|Mac OS X/.test(ua)) {
            os = "macOS";
            console.log('[FormSender] Определена ОС macOS');
        }
        else if (/Linux/.test(ua)) {
            os = "Linux";
            console.log('[FormSender] Определена ОС Linux');
        }
        else if (/Android/.test(ua)) {
            os = "Android";
            console.log('[FormSender] Определена ОС Android');
        }
        else if (/iPhone|iPad|iPod/.test(ua)) {
            os = "iOS";
            console.log('[FormSender] Определена ОС iOS');
        }
        
        // Определяем браузер
        console.log('[FormSender] Определение браузера');
        if (/Edge|Edg/.test(ua)) {
            browser = "Edge";
            version = ua.match(/(Edge|Edg)\/(\d+(\.\d+)?)/);
            console.log('[FormSender] Определен браузер Edge');
        } else if (/Chrome/.test(ua)) {
            browser = "Chrome";
            version = ua.match(/Chrome\/(\d+(\.\d+)?)/);
            console.log('[FormSender] Определен браузер Chrome');
        } else if (/Firefox/.test(ua)) {
            browser = "Firefox";
            version = ua.match(/Firefox\/(\d+(\.\d+)?)/);
            console.log('[FormSender] Определен браузер Firefox');
        } else if (/Safari/.test(ua) && !/Chrome/.test(ua)) {
            browser = "Safari";
            version = ua.match(/Version\/(\d+(\.\d+)?)/);
            console.log('[FormSender] Определен браузер Safari');
        } else if (/MSIE|Trident/.test(ua)) {
            browser = "Internet Explorer";
            version = ua.match(/(?:MSIE |rv:)(\d+(\.\d+)?)/);
            console.log('[FormSender] Определен браузер Internet Explorer');
        } else if (/Opera|OPR/.test(ua)) {
            browser = "Opera";
            version = ua.match(/(?:Opera|OPR)\/(\d+(\.\d+)?)/);
            console.log('[FormSender] Определен браузер Opera');
        }
        
        version = version ? version[1] : "Неизвестно";
        console.log(`[FormSender] Определена версия браузера: ${version}`);
        
        return { browser, version, os };
    }

    function getVisitCount() {
        console.log('[FormSender] Получение количества посещений');
        try {
            let count = parseInt(localStorage.getItem('visitCount') || '0');
            console.log('[FormSender] Текущее количество посещений:', count);
            count++;
            console.log('[FormSender] Увеличиваем счетчик посещений до:', count);
            localStorage.setItem('visitCount', count);
            return count;
        } catch (e) {
            console.log('[FormSender] Ошибка доступа к localStorage:', e.message);
            return "Недоступно";
        }
    }

    function getSessionDuration() {
        console.log('[FormSender] Получение продолжительности сессии');
        try {
            const sessionStart = sessionStorage.getItem('sessionStart');
            console.log('[FormSender] Проверка наличия данных о начале сессии');
            
            if (!sessionStart) {
                console.log('[FormSender] Начало сессии не найдено, создаем новую');
                sessionStorage.setItem('sessionStart', Date.now());
                return "Первое посещение";
            }
            
            console.log('[FormSender] Расчет длительности сессии');
            const duration = Math.floor((Date.now() - parseInt(sessionStart)) / 1000);
            const minutes = Math.floor(duration / 60);
            const seconds = duration % 60;
            console.log(`[FormSender] Длительность сессии: ${minutes}м ${seconds}с`);
            return `${minutes}м ${seconds}с`;
        } catch (e) {
            console.log('[FormSender] Ошибка доступа к sessionStorage:', e.message);
            return "Недоступно";
        }
    }

    function generateSessionId() {
        console.log('[FormSender] Генерация ID сессии');
        try {
            let sessionId = sessionStorage.getItem('sessionId');
            console.log('[FormSender] Проверка существующего ID сессии');
            
            if (!sessionId) {
                console.log('[FormSender] ID сессии не найден, генерация нового');
                sessionId = Math.random().toString(36).substring(2, 15) + 
                            Math.random().toString(36).substring(2, 15);
                sessionStorage.setItem('sessionId', sessionId);
                console.log('[FormSender] Новый ID сессии сохранен');
            } else {
                console.log('[FormSender] Использован существующий ID сессии');
            }
            
            return sessionId;
        } catch (e) {
            console.log('[FormSender] Ошибка работы с sessionStorage:', e.message);
            console.log('[FormSender] Генерация случайного ID сессии без сохранения');
            return Math.random().toString(36).substring(2, 15);
        }
    }

    /**
     * Получает значение поля формы
     */
    function getFieldValue(selector) {
        console.log(`[FormSender] Получение значения поля по селектору: ${selector}`);
        const field = document.querySelector(selector);
        
        if (!field) {
            console.log(`[FormSender] Поле не найдено по селектору: ${selector}`);
            return '';
        }
        
        console.log(`[FormSender] Значение поля ${selector}:`, field.value.trim());
        return field.value.trim();
    }
    
    /**
     * Проверяет корректность данных формы
     */
    function validateForm(data) {
        console.log('[FormSender] Начало валидации формы');
        let isValid = true;
        
        // Проверка имени
        console.log('[FormSender] Валидация имени');
        if (!data.name) {
            console.log('[FormSender] Имя не заполнено, отображение ошибки');
            showFieldError(CONFIG.selectors.name, CONFIG.messages.nameRequired);
            isValid = false;
        } else {
            console.log('[FormSender] Имя заполнено корректно');
        }
        
        // Проверка телефона
        console.log('[FormSender] Валидация телефона');
        if (!data.phone) {
            console.log('[FormSender] Телефон не заполнен, отображение ошибки');
            showFieldError(CONFIG.selectors.phone, CONFIG.messages.phoneRequired);
            isValid = false;
        } else if (!isValidPhone(data.phone)) {
            console.log('[FormSender] Телефон имеет неверный формат, отображение ошибки');
            showFieldError(CONFIG.selectors.phone, CONFIG.messages.phoneInvalid);
            isValid = false;
        } else {
            console.log('[FormSender] Телефон заполнен корректно');
        }
        
        // Проверка email, если указан
        console.log('[FormSender] Валидация email');
        if (data.email && !isValidEmail(data.email)) {
            console.log('[FormSender] Email имеет неверный формат, отображение ошибки');
            showFieldError(CONFIG.selectors.email, CONFIG.messages.emailInvalid);
            isValid = false;
        } else if (data.email) {
            console.log('[FormSender] Email заполнен корректно');
        } else {
            console.log('[FormSender] Email не заполнен, пропускаем валидацию');
        }
        
        console.log('[FormSender] Результат валидации формы:', isValid ? 'Успешно' : 'Есть ошибки');
        return isValid;
    }
    
    /**
     * Проверяет корректность email
     */
    function isValidEmail(email) {
        console.log(`[FormSender] Проверка корректности email: ${email}`);
        const re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
        const result = re.test(String(email).toLowerCase());
        console.log(`[FormSender] Результат проверки email: ${result ? 'Валидный' : 'Невалидный'}`);
        return result;
    }
    
    /**
     * Проверяет корректность телефона
     */
    function isValidPhone(phone) {
        console.log(`[FormSender] Проверка корректности телефона: ${phone}`);
        // Удаляем все нецифровые символы
        const digits = phone.replace(/\D/g, '');
        console.log(`[FormSender] Количество цифр в телефоне: ${digits.length}`);
        // Проверяем, что осталось не менее 10 цифр
        const result = digits.length >= 10;
        console.log(`[FormSender] Результат проверки телефона: ${result ? 'Валидный' : 'Невалидный'}`);
        return result;
    }
    
    /**
     * Показывает сообщение об ошибке для поля
     */
    function showFieldError(selector, message) {
        console.log(`[FormSender] Отображение ошибки для поля ${selector}: "${message}"`);
        const field = document.querySelector(selector);
        if (!field) {
            console.log(`[FormSender] Поле для отображения ошибки не найдено: ${selector}`);
            return;
        }
        
        // Создаем элемент с сообщением об ошибке
        console.log('[FormSender] Создание DOM-элемента для ошибки');
        const errorDiv = document.createElement('div');
        errorDiv.className = 'field-error';
        errorDiv.textContent = message;
        errorDiv.style.color = 'red';
        errorDiv.style.fontSize = '12px';
        errorDiv.style.marginTop = '5px';
        
        // Добавляем стиль для поля с ошибкой
        console.log('[FormSender] Добавление стиля ошибки к полю');
        field.style.borderColor = 'red';
        
        // Вставляем сообщение после поля
        console.log('[FormSender] Вставка сообщения об ошибке в DOM');
        field.parentNode.insertBefore(errorDiv, field.nextSibling);
        
        // Добавляем обработчик для удаления ошибки при вводе
        console.log('[FormSender] Добавление обработчика для очистки ошибки при вводе');
        field.addEventListener('input', function() {
            console.log(`[FormSender] Пользователь ввел данные в поле ${selector}, удаление ошибки`);
            field.style.borderColor = '';
            if (errorDiv.parentNode) {
                errorDiv.parentNode.removeChild(errorDiv);
                console.log('[FormSender] Сообщение об ошибке удалено');
            }
        }, { once: true });
    }
    
    /**
     * Очищает все сообщения об ошибках
     */
    function clearFormErrors() {
        console.log('[FormSender] Очистка всех сообщений об ошибках');
        // Удаляем элементы с ошибками
        const errorElements = document.querySelectorAll('.field-error');
        console.log(`[FormSender] Найдено элементов с ошибками: ${errorElements.length}`);
        
        errorElements.forEach((element, index) => {
            console.log(`[FormSender] Удаление элемента ошибки #${index}`);
            if (element.parentNode) {
                element.parentNode.removeChild(element);
            }
        });
        
        // Сбрасываем стили полей с ошибками
        console.log('[FormSender] Сброс стилей полей с ошибками');
        const formFields = form.querySelectorAll('input, textarea');
        console.log(`[FormSender] Найдено полей формы: ${formFields.length}`);
        
        formFields.forEach((field, index) => {
            console.log(`[FormSender] Сброс стиля для поля #${index}`);
            field.style.borderColor = '';
        });
        
        console.log('[FormSender] Очистка ошибок завершена');
    }
    
    /**
     * Показывает уведомление после отправки формы
     */
    function showNotification(message, type) {
        console.log(`[FormSender] Отображение уведомления типа "${type}": "${message}"`);
        // Удаляем предыдущее уведомление, если есть
        const existingNotification = document.querySelector('.form-notification');
        if (existingNotification) {
            console.log('[FormSender] Найдено существующее уведомление, удаляем');
            existingNotification.remove();
        }
        
        // Создаем элемент уведомления
        console.log('[FormSender] Создание DOM-элемента уведомления');
        const notification = document.createElement('div');
        notification.className = `form-notification ${type}`;
        notification.textContent = message;
        notification.style.padding = '12px 15px';
        notification.style.marginTop = '15px';
        notification.style.borderRadius = '4px';
        notification.style.fontWeight = 'bold';
        
        // Устанавливаем стиль в зависимости от типа
        console.log(`[FormSender] Применение стилей для типа "${type}"`);
        if (type === 'success') {
            notification.style.backgroundColor = '#d4edda';
            notification.style.color = '#155724';
            notification.style.border = '1px solid #c3e6cb';
        } else {
            notification.style.backgroundColor = '#f8d7da';
            notification.style.color = '#721c24';
            notification.style.border = '1px solid #f5c6cb';
        }
        
        // Добавляем уведомление после формы
        console.log('[FormSender] Вставка уведомления в DOM');
        form.parentNode.insertBefore(notification, form.nextSibling);
        
        // Автоматически скрываем через 5 секунд
        console.log('[FormSender] Установка таймера для скрытия уведомления (5 секунд)');
        setTimeout(() => {
            console.log('[FormSender] Таймер сработал, начинаем анимацию скрытия');
            notification.style.opacity = '0';
            notification.style.transition = 'opacity 0.5s';
            
            setTimeout(() => {
                console.log('[FormSender] Анимация завершена, удаляем элемент уведомления');
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 500);
        }, 5000);
    }
    
    /**
     * Экранирует HTML-символы
     */
    function escapeHtml(text) {
        console.log('[FormSender] Экранирование HTML-символов');
        if (!text) {
            console.log('[FormSender] Текст пустой, возвращаем пустую строку');
            return '';
        }
        
        const escaped = text
            .replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
            
        console.log('[FormSender] Текст успешно экранирован');
        return escaped;
    }
    
    console.log('[FormSender] Инициализация скрипта завершена');
});

   </script>


  <!-- Скрипт для работы с UTM-метками -->
  <script>
    (function() {
        // Настройка продвинутого логирования
        const logger = {
            styles: {
                info: 'color: #2196F3; font-weight: bold; padding: 2px 5px; border-radius: 3px; background: #e3f2fd;',
                success: 'color: #4CAF50; font-weight: bold; padding: 2px 5px; border-radius: 3px; background: #e8f5e9;',
                warning: 'color: #FF9800; font-weight: bold; padding: 2px 5px; border-radius: 3px; background: #fff3e0;',
                error: 'color: #F44336; font-weight: bold; padding: 2px 5px; border-radius: 3px; background: #ffebee;',
                group: 'color: #673AB7; font-weight: bold; padding: 2px 5px; border-radius: 3px; background: #ede7f6;'
            },
            timestamp() {
                const now = new Date();
                return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}.${now.getMilliseconds().toString().padStart(3, '0')}`;
            },
            info(message, data) {
                console.log(`%c[ИНФО ${this.timestamp()}] ${message}`, this.styles.info, data ? data : '');
            },
            success(message, data) {
                console.log(`%c[УСПЕХ ${this.timestamp()}] ${message}`, this.styles.success, data ? data : '');
            },
            warning(message, data) {
                console.log(`%c[ВНИМАНИЕ ${this.timestamp()}] ${message}`, this.styles.warning, data ? data : '');
            },
            error(message, data) {
                console.error(`%c[ОШИБКА ${this.timestamp()}] ${message}`, this.styles.error, data ? data : '');
            },
            groupStart(title) {
                console.group(`%c[ГРУППА ${this.timestamp()}] ${title}`, this.styles.group);
            },
            groupEnd() {
                console.groupEnd();
            },
            table(data, title = 'Таблица данных') {
                this.info(title);
                console.table(data);
            }
        };
    
        // Функция для получения и сохранения UTM-параметров
        function saveUtmParams() {
            logger.groupStart('Сохранение UTM-параметров');
            
            // Получаем текущие параметры URL
            const urlParams = new URLSearchParams(window.location.search);
            const utmParams = new URLSearchParams();
            const utmTags = ['utm_source', 'utm_medium', 'utm_campaign', 'utm_term', 'utm_content'];
            
            // Проверяем наличие UTM-параметров
            let hasUtm = false;
            let foundParams = {};
            
            utmTags.forEach(tag => {
                if (urlParams.has(tag)) {
                    hasUtm = true;
                    const value = urlParams.get(tag);
                    utmParams.set(tag, value);
                    foundParams[tag] = value;
                }
            });
            
            if (hasUtm) {
                try {
                    // Сохраняем UTM-параметры в localStorage
                    localStorage.setItem('utm_params', utmParams.toString());
                    localStorage.setItem('utm_timestamp', Date.now());
                    logger.success('UTM-параметры сохранены в localStorage', foundParams);
                } catch (error) {
                    logger.error('Невозможно сохранить UTM-параметры в localStorage', {
                        причина: error.message,
                        стек: error.stack
                    });
                }
            } else {
                logger.info('UTM-параметры не обнаружены в URL');
            }
            
            logger.groupEnd();
        }
        
        // Функция для проверки актуальности UTM-параметров (30 дней)
        function checkUtmExpiration() {
            logger.groupStart('Проверка срока действия UTM-параметров');
            
            const timestamp = localStorage.getItem('utm_timestamp');
            if (timestamp) {
                const expirationDays = 30;
                const expirationMs = expirationDays * 24 * 60 * 60 * 1000;
                const now = Date.now();
                const savedTime = parseInt(timestamp);
                const ageMs = now - savedTime;
                const ageDays = Math.floor(ageMs / (24 * 60 * 60 * 1000));
                
                logger.info('Данные о возрасте UTM-параметров', {
                    сохранено: new Date(savedTime).toLocaleString(),
                    текущее_время: new Date(now).toLocaleString(),
                    возраст_дней: ageDays,
                    срок_действия_дней: expirationDays
                });
                
                if (ageMs > expirationMs) {
                    localStorage.removeItem('utm_params');
                    localStorage.removeItem('utm_timestamp');
                    logger.warning(`UTM-параметры устарели (${ageDays} дней) и были удалены`);
                    return false;
                }
                
                logger.success(`UTM-параметры актуальны (${ageDays} из ${expirationDays} дней)`);
                return true;
            }
            
            logger.info('UTM-параметры не найдены в localStorage');
            logger.groupEnd();
            return false;
        }
        
        // Функция для добавления UTM-параметров ко всем внутренним ссылкам
        function addUtmToLinks() {
            logger.groupStart('Добавление UTM-параметров к ссылкам');
            
            const storedParams = localStorage.getItem('utm_params');
            
            if (storedParams) {
                const links = document.querySelectorAll('a[href]');
                const params = new URLSearchParams(storedParams);
                let utmData = {};
                
                params.forEach((value, key) => {
                    utmData[key] = value;
                });
                
                logger.info(`Найдено ${links.length} ссылок на странице`, {
                    применяемые_параметры: utmData
                });
                
                let modifiedCount = 0;
                let skippedCount = 0;
                let errorCount = 0;
                
                links.forEach(function(link, index) {
                    try {
                        // Проверяем, что ссылка валидная
                        if (link.href.startsWith('http') || link.href.startsWith('/')) {
                            const url = new URL(link.href, window.location.origin);
                            
                            // Проверяем, что ссылка ведет на тот же домен
                            if (url.hostname === window.location.hostname) {
                                // Запоминаем оригинальную ссылку для лога
                                const originalUrl = url.toString();
                                
                                // Добавляем UTM-параметры к ссылке
                                params.forEach((value, key) => {
                                    url.searchParams.set(key, value);
                                });
                                
                                // Обновляем ссылку
                                link.href = url.toString();
                                
                                modifiedCount++;
                                logger.info(`Ссылка #${index + 1} модифицирована`, {
                                    было: originalUrl,
                                    стало: url.toString(),
                                    текст_ссылки: link.textContent?.trim() || '[без текста]'
                                });
                            } else {
                                skippedCount++;
                                logger.info(`Ссылка #${index + 1} пропущена (внешний домен)`, {
                                    ссылка: link.href,
                                    домен: url.hostname
                                });
                            }
                        } else {
                            skippedCount++;
                            logger.info(`Ссылка #${index + 1} пропущена (специальный формат)`, {
                                ссылка: link.href
                            });
                        }
                    } catch (error) {
                        errorCount++;
                        logger.error(`Ошибка обработки ссылки #${index + 1}`, {
                            ссылка: link.href || '[неизвестно]',
                            ошибка: error.message
                        });
                    }
                });
                
                logger.success('Обработка ссылок завершена', {
                    всего_ссылок: links.length,
                    модифицировано: modifiedCount,
                    пропущено: skippedCount,
                    ошибок: errorCount
                });
            } else {
                logger.warning('UTM-параметры не найдены в localStorage, ссылки не модифицированы');
            }
            
            logger.groupEnd();
        }
        
        // Функция для добавления UTM-параметров в формы
        function addUtmToForms() {
            logger.groupStart('Добавление UTM-параметров к формам');
            
            const storedParams = localStorage.getItem('utm_params');
            
            if (storedParams) {
                const forms = document.querySelectorAll('form');
                const params = new URLSearchParams(storedParams);
                let utmData = {};
                
                params.forEach((value, key) => {
                    utmData[key] = value;
                });
                
                logger.info(`Найдено ${forms.length} форм на странице`, {
                    применяемые_параметры: utmData
                });
                
                forms.forEach(function(form, formIndex) {
                    logger.info(`Обработка формы #${formIndex + 1}`, {
                        id: form.id || '[без id]',
                        action: form.action || '[без action]',
                        method: form.method || 'get'
                    });
                    
                    let fieldsAdded = 0;
                    let fieldsUpdated = 0;
                    
                    // Создаем скрытые поля для каждого UTM-параметра
                    params.forEach((value, key) => {
                        // Проверяем, существует ли уже такое поле
                        let input = form.querySelector(`input[name="${key}"]`);
                        
                        if (!input) {
                            // Создаем новое скрытое поле
                            input = document.createElement('input');
                            input.type = 'hidden';
                            input.name = key;
                            form.appendChild(input);
                            fieldsAdded++;
                            logger.info(`Добавлено скрытое поле "${key}" со значением "${value}"`);
                        } else {
                            fieldsUpdated++;
                            logger.info(`Обновлено существующее поле "${key}" со значением "${value}"`);
                        }
                        
                        // Устанавливаем значение
                        input.value = value;
                    });
                    
                    logger.success(`Форма #${formIndex + 1} обработана`, {
                        добавлено_полей: fieldsAdded,
                        обновлено_полей: fieldsUpdated
                    });
                });
            } else {
                logger.warning('UTM-параметры не найдены в localStorage, формы не модифицированы');
            }
            
            logger.groupEnd();
        }
        
        // Функция для добавления UTM-параметров в тело сообщения для Telegram-бота
        function addUtmToTelegramForm() {
            logger.groupStart('Специальная обработка формы для Telegram');
            
            const telegramForm = document.getElementById('telegramForm');
            const storedParams = localStorage.getItem('utm_params');
            
            if (telegramForm && storedParams) {
                logger.info('Форма для Telegram найдена', {
                    id: telegramForm.id,
                    action: telegramForm.action || '[без action]',
                    method: telegramForm.method || 'get'
                });
                
                // Получаем UTM-параметры для лога
                const params = new URLSearchParams(storedParams);
                let utmData = {};
                params.forEach((value, key) => {
                    utmData[key] = value;
                });
                logger.info('UTM-параметры для вставки в сообщение', utmData);
                
                // Сохраняем оригинальный обработчик отправки формы
                const originalSubmitHandler = telegramForm.onsubmit;
                logger.info('Оригинальный обработчик onsubmit', {
                    существует: typeof originalSubmitHandler === 'function'
                });
                
                // Заменяем обработчик отправки
                telegramForm.onsubmit = function(e) {
                    logger.info('Сработал обработчик отправки формы для Telegram');
                    
                    if (typeof originalSubmitHandler === 'function') {
                        // Вызываем оригинальный обработчик, если он есть
                        logger.info('Вызов оригинального обработчика');
                        const result = originalSubmitHandler.call(this, e);
                        
                        if (result === false) {
                            logger.warning('Оригинальный обработчик вернул false, прерываем отправку');
                            return false;
                        }
                    }
                    
                    // Получаем UTM-параметры
                    const utmParams = new URLSearchParams(storedParams);
                    let utmString = '';
                    
                    utmParams.forEach((value, key) => {
                        utmString += `\n${key}: ${value}`;
                    });
                    
                    // Добавляем UTM-информацию в сообщение Telegram
                    const messageField = document.getElementById('userMessage');
                    if (messageField && utmString) {
                        const originalMessage = messageField.value;
                        messageField.value = originalMessage + '\n\n--- UTM Данные ---' + utmString;
                        
                        logger.success('UTM-данные добавлены в текст сообщения', {
                            было_символов: originalMessage.length,
                            стало_символов: messageField.value.length,
                            утм_данные: utmString
                        });
                    } else {
                        logger.warning('Поле сообщения не найдено или UTM-данные отсутствуют', {
                            поле_сообщения_найдено: !!messageField,
                            utm_строка: utmString
                        });
                    }
                    
                    logger.info('Продолжение стандартной отправки формы');
                    return true;
                };
                
                logger.success('Обработчик формы Telegram успешно модифицирован');
            } else {
                if (!telegramForm) {
                    logger.warning('Форма для Telegram не найдена (#telegramForm)');
                }
                
                if (!storedParams) {
                    logger.warning('UTM-параметры не найдены в localStorage');
                }
            }
            
            logger.groupEnd();
        }
        
        // Функция инициализации
        function init() {
            logger.groupStart('Инициализация UTM-трекера');
            logger.info('Запуск системы отслеживания UTM-параметров', {
                время: new Date().toLocaleString(),
                url: window.location.href,
                referrer: document.referrer || '[прямой переход]'
            });
            
            // Сохраняем UTM-параметры, если они есть в URL
            saveUtmParams();
            
            // Проверяем срок действия сохраненных UTM-параметров
            const utmValid = checkUtmExpiration();
            
            if (utmValid) {
                logger.info('UTM-параметры валидны, начинаем применение');
                
                // Добавляем UTM-параметры ко всем ссылкам на странице
                addUtmToLinks();
                
                // Добавляем UTM-параметры ко всем формам
                addUtmToForms();
                
                // Специальная обработка для формы отправки в Telegram
                addUtmToTelegramForm();
                
                logger.success('Все UTM-параметры успешно применены');
            } else {
                logger.warning('UTM-параметры отсутствуют или устарели, модификация не выполнена');
            }
            
            logger.groupEnd();
        }
        
        // Запускаем инициализацию при загрузке страницы
        if (document.readyState === 'loading') {
            logger.info('Документ загружается, ожидаем событие DOMContentLoaded');
            document.addEventListener('DOMContentLoaded', init);
        } else {
            logger.info('Документ уже загружен, запускаем инициализацию немедленно');
            init();
        }
        
        // Добавляем перехват динамически добавляемых форм и ссылок
        logger.info('Настройка MutationObserver для отслеживания изменений DOM');
        
        const observer = new MutationObserver(function(mutations) {
            let addedNodes = 0;
            
            mutations.forEach(function(mutation) {
                if (mutation.addedNodes && mutation.addedNodes.length > 0) {
                    addedNodes += mutation.addedNodes.length;
                }
            });
            
            if (addedNodes > 0) {
                logger.info(`Обнаружено ${addedNodes} новых узлов DOM, запуск обновления UTM-параметров`);
                
                setTimeout(function() {
                    logger.groupStart('Обновление UTM-параметров для динамического контента');
                    addUtmToLinks();
                    addUtmToForms();
                    addUtmToTelegramForm();
                    logger.groupEnd();
                }, 100);
            }
        });
        
        // Запускаем наблюдение за изменениями в DOM
        observer.observe(document.body, { childList: true, subtree: true });
        logger.success('MutationObserver успешно запущен для отслеживания изменений в DOM');
    })();
    </script>
    
  

<!-- ============================================= -->
<!-- FOOTER SECTION (SEO OPTIMIZED)                -->
<!-- ============================================= -->
<footer class="site-footer" itemscope itemtype="http://schema.org/Organization">
    <div class="footer-widgets">
        <div class="container">
            <div class="row">
                
                <!-- ========== БЛОК О КОМПАНИИ ========== -->
                <div class="col-lg-4 col-md-6">
                    <div class="footer-widget about-widget">
                        <div class="footer-logo" itemprop="logo">
                            <img src="assets/templates/img/logo.png" 
                                 alt="GigSys - IT аутсорсинг и поддержка бизнеса" 
                                 width="180" 
                                 height="50"
                                 loading="lazy">
                        </div>
                        <p itemprop="description">Комплексное ИТ-обслуживание для бизнеса любого масштаба. 
                        Предоставляем полный спектр услуг по внедрению и поддержке ИТ-инфраструктуры.</p>
                        
                        <!-- СОЦИАЛЬНЫЕ СЕТИ С MICRODATA -->
                        <div class="footer-social" aria-label="Социальные сети">
                            <a href="https://t.me/GigSys" itemprop="sameAs" aria-label="Telegram">
                                <i class="fab fa-telegram"></i>
                            </a>
                            <a href="https://vk.com/gigsys" itemprop="sameAs" aria-label="ВКонтакте">
                                <i class="fab fa-vk"></i>
                            </a>
                            <a href="https://wa.me/79255853075" itemprop="sameAs" aria-label="WhatsApp">
                                <i class="fab fa-whatsapp"></i>
                            </a>
                            <a href="mailto:it@gigsys.ru" itemprop="sameAs" aria-label="Email">
                                <i class="fas fa-envelope"></i>
                            </a>
                        </div>
                    </div>
                </div>

                <!-- ========== НАВИГАЦИОННЫЕ ССЫЛКИ ========== -->
                <div class="col-lg-2 col-md-6">
                    <nav class="footer-widget links-widget" aria-label="Дополнительная навигация">
                        <h4 class="widget-title">Компания</h4>
                        <ul>
                            <li><a href="index.html" itemprop="url">Главная</a></li>
                            <li><a href="o-kompanii.html">О компании</a></li>
                            <li><a href="novosti/index.html">Новости</a></li>
                            <li><a href="kontaktyi.html">Контакты</a></li>
                        </ul>
                    </nav>
                </div>

                <!-- ========== СПИСОК УСЛУГ ========== -->
                <div class="col-lg-3 col-md-6">
                    <div class="footer-widget services-widget">
                        <h4 class="widget-title">Услуги</h4>
                        <ul>
                            <li><a href="it-support.html">IT-поддержка</a></li>
                            <li><a href="it-autsorsing.html">IT-аутсорсинг</a></li>
                            <li><a href="virtual-office.html">Защищенный офис</a></li>
                            <li><a href="obsluzhivanie-serverov.html">Серверы</a></li>
                        </ul>
                    </div>
                </div>

                <!-- ========== КОНТАКТЫ С MICRODATA ========== -->
                <div class="col-lg-3 col-md-6">
                    <div class="footer-widget contact-widget" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
                        <h4 class="widget-title">Контакты</h4>
                        <ul class="contact-list">
                            <li>
                                <i class="fa fa-map-marker-alt"></i>
                                <span itemprop="streetAddress">Ракетный бульвар, д.15, оф.31</span>, 
                                <span itemprop="addressLocality">Москва</span>
                            </li>
                            <li>
                                <i class="fas fa-phone-alt"></i>
                                <a href="tel:88003501160" itemprop="telephone">8(499)350-11-60</a>
                            </li>
                            <li>
                                <i class="fa fa-envelope"></i>
                                <a href="mailto:it@gigsys.ru" itemprop="email">it@gigsys.ru</a>
                            </li>
                            <li>
                                <i class="fa fa-clock"></i>
                                <span itemprop="openingHours">Пн-Пт: 9:00 - 18:00</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- ========== КОПИРАЙТ И ЮРИДИЧЕСКИЕ ССЫЛКИ ========== -->
    <div class="footer-bottom">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-lg-6">
                    <div class="copyright">
                        <p>&copy; <span itemprop="copyrightYear">2025</span> 
                        <span itemprop="name">GigSys IT-solutions</span>. Все права защищены</p>
                    </div>
                </div>
                <div class="col-lg-6">
                    <nav class="footer-bottom-links text-lg-right" aria-label="Юридическая информация">
                        <a href="privacy-policy.html">Политика конфиденциальности</a>
                        <a href="terms.html">Пользовательское соглашение</a>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</footer>

<!-- ========== КНОПКА "НАВЕРХ" ========== -->
<a href="#" class="back-to-top" aria-label="Вернуться к началу страницы">
    <i class="fa fa-angle-up"></i>
</a>


    <!-- ============================================= -->
    <!-- MODALS AND POPUPS                             -->
    <!-- ============================================= -->
     <!-- Всплывающий баннер для анкеты -->


    <!-- Упрощенное модальное окно -->
    <div class="simple-modal-overlay" id="simple-modal-overlay"></div>

    <!-- Модальное окно обратного звонка с минимальной структурой -->
    <div class="simple-modal" id="simple-callback">
        <div class="simple-modal-content">
            <!-- Кнопка закрытия -->
            <button class="simple-modal-close" onclick="closeSimpleModal()" aria-label="Закрыть">×</button>
            
            <!-- Заголовок -->
            <div class="simple-modal-header">
                <div class="simple-modal-icon">
                    <i class="fa fa-headset"></i>
                </div>
                <h3>ЗАКАЗАТЬ ЗВОНОК</h3>
                <p>Оставьте свои контактные данные, и мы свяжемся с вами в ближайшее время</p>
            </div>
            
            <!-- Форма -->
            <form id="simple-callback-form" onsubmit="event.preventDefault(); submitSimpleForm(this);">
                <input type="hidden" name="project_name" value="GigSys.ru">
                <input type="hidden" name="admin_email" value="it@gigsys.ru">
                <input type="hidden" name="form_subject" value="Форма - Заказать звонок">
                
                <!-- Имя -->
                <div class="simple-form-group">
                    <div class="simple-input-wrapper">
                        <i class="fa fa-user simple-input-icon"></i>
                        <input 
                            type="text" 
                            name="Имя" 
                            placeholder="Ваше имя" 
                            required 
                            aria-label="Имя"
                        >
                    </div>
                </div>
                
                <!-- Телефон -->
                <div class="simple-form-group">
                    <div class="simple-input-wrapper">
                        <i class="fa fa-phone simple-input-icon"></i>
                        <input 
                            type="tel" 
                            name="Телефон" 
                            placeholder="Номер телефона" 
                            required 
                            aria-label="Телефон"
                        >
                    </div>
                </div>
                
                <!-- Email -->
                <div class="simple-form-group">
                    <div class="simple-input-wrapper">
                        <i class="fa fa-envelope simple-input-icon"></i>
                        <input 
                            type="email" 
                            name="Email" 
                            placeholder="Ваш e-mail" 
                            required 
                            aria-label="Email"
                        >
                    </div>
                </div>
                
                <!-- Сообщение -->
                <div class="simple-form-group">
                    <div class="simple-input-wrapper">
                        <i class="fa fa-comment simple-input-icon"></i>
                        <textarea 
                            name="Комментарий" 
                            placeholder="Ваш комментарий" 
                            rows="3"
                            aria-label="Комментарий"
                        ></textarea>
                    </div>
                </div>
                
                <!-- Согласие -->
                <div class="simple-form-group">
                    <label class="simple-checkbox">
                        <input 
                            type="checkbox" 
                            required 
                            aria-label="Согласие на обработку данных"
                        >
                        <span class="simple-checkbox-text">Согласен на обработку персональных данных</span>
                    </label>
                </div>
                
                <!-- Кнопка отправки -->
                <div class="simple-form-group">
                    <button 
                        type="submit" 
                        class="simple-submit-button"
                    >
                        <span>Отправить</span>
                        <i class="fa fa-paper-plane"></i>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Модальное окно успешной отправки -->
    <div class="simple-modal" id="simple-success">
        <div class="simple-modal-content">
            <button class="simple-modal-close" onclick="closeSimpleModal()" aria-label="Закрыть">×</button>
            
            <div class="simple-success-icon">
                <i class="fa fa-check"></i>
            </div>
            
            <h3>Спасибо за заявку</h3>
            <p>Ожидайте нашего звонка в ближайшее время</p>
            
            <button 
                onclick="closeSimpleModal()" 
                class="simple-submit-button"
            >
                <span>Закрыть</span>
            </button>
        </div>
    </div>

    <script>
        // Настраиваем систему логирования
        const Logger = {
            styles: {
                info: 'color: #0066cc; background: #e6f2ff; padding: 2px 4px; border-radius: 2px; font-weight: bold;',
                success: 'color: #008800; background: #e6ffe6; padding: 2px 4px; border-radius: 2px; font-weight: bold;',
                warning: 'color: #cc7700; background: #fff2cc; padding: 2px 4px; border-radius: 2px; font-weight: bold;',
                error: 'color: #cc0000; background: #ffe6e6; padding: 2px 4px; border-radius: 2px; font-weight: bold;',
                event: 'color: #6600cc; background: #f2e6ff; padding: 2px 4px; border-radius: 2px; font-weight: bold;',
                modal: 'color: #007777; background: #e6ffff; padding: 2px 4px; border-radius: 2px; font-weight: bold;',
                network: 'color: #cc00cc; background: #ffe6ff; padding: 2px 4px; border-radius: 2px; font-weight: bold;'
            },
            getTime() {
                const now = new Date();
                return `${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}:${now.getSeconds().toString().padStart(2, '0')}.${now.getMilliseconds().toString().padStart(3, '0')}`;
            },
            info(message, data) {
                console.log(`%c[ИНФО ${this.getTime()}] ${message}`, this.styles.info, data || '');
            },
            success(message, data) {
                console.log(`%c[УСПЕХ ${this.getTime()}] ${message}`, this.styles.success, data || '');
            },
            warning(message, data) {
                console.log(`%c[ПРЕДУПРЕЖДЕНИЕ ${this.getTime()}] ${message}`, this.styles.warning, data || '');
            },
            error(message, data) {
                console.error(`%c[ОШИБКА ${this.getTime()}] ${message}`, this.styles.error, data || '');
            },
            event(message, data) {
                console.log(`%c[СОБЫТИЕ ${this.getTime()}] ${message}`, this.styles.event, data || '');
            },
            modal(message, data) {
                console.log(`%c[МОДАЛ ${this.getTime()}] ${message}`, this.styles.modal, data || '');
            },
            network(message, data) {
                console.log(`%c[СЕТЬ ${this.getTime()}] ${message}`, this.styles.network, data || '');
            },
            groupStart(title) {
                console.group(`%c[ГРУППА ${this.getTime()}] ${title}`, this.styles.info);
            },
            groupEnd() {
                console.groupEnd();
            }
        };
        
        // Дожидаемся полной загрузки DOM
        Logger.info('Скрипт формы обратного звонка инициализирован');
        document.addEventListener('DOMContentLoaded', function() {
            Logger.event('Событие DOMContentLoaded активировано');
            Logger.groupStart('Инициализация формы обратного звонка');
            
            // Находим форму по ID
            Logger.info('Поиск формы по ID "simple-callback-form"');
            const form = document.getElementById('simple-callback-form');
            
            if (form) {
                Logger.success('Форма успешно найдена', {
                    id: form.id,
                    classes: form.className,
                    элементов: form.elements ? form.elements.length : 'не определено'
                });
                
                // Добавляем обработчик события submit для формы
                Logger.info('Добавление обработчика submit к форме');
                form.addEventListener('submit', function(e) {
                    Logger.event('Событие отправки формы активировано');
                    e.preventDefault();
                    Logger.info('Стандартная отправка формы предотвращена');
                    
                    Logger.groupStart('Обработка данных формы');
                    
                    // Получаем значения полей формы
                    Logger.info('Получение значений полей формы');
                    
                    const nameField = this.querySelector('input[name="Имя"]');
                    const emailField = this.querySelector('input[name="Email"]');
                    const phoneField = this.querySelector('input[name="Телефон"]');
                    const messageField = this.querySelector('textarea[name="Комментарий"]');
                    
                    // Проверяем наличие полей
                    if (!nameField || !phoneField) {
                        Logger.error('Обязательные поля формы не найдены', {
                            nameField: !!nameField,
                            phoneField: !!phoneField
                        });
                        alert('Ошибка структуры формы: не найдены обязательные поля');
                        return;
                    }
                    
                    const name = nameField.value.trim();
                    const email = emailField ? emailField.value.trim() : '';
                    const phone = phoneField.value.trim();
                    const message = messageField ? messageField.value.trim() : '';
                    
                    Logger.info('Получены данные формы', {
                        имя: name || '[пусто]',
                        email: email || '[пусто]',
                        телефон: phone || '[пусто]',
                        сообщение: message ? (message.length > 30 ? message.substring(0, 30) + '...' : message) : '[пусто]'
                    });
                    
                    // Проверка заполнения обязательных полей
                    if (!name || !phone) {
                        Logger.warning('Не заполнены обязательные поля', {
                            имя: !!name,
                            телефон: !!phone
                        });
                        alert('Пожалуйста, заполните обязательные поля (имя и телефон)');
                        return;
                    }
                    
                    Logger.success('Валидация формы пройдена успешно');
                    
                    // Формируем текст сообщения для Telegram
                    Logger.info('Формирование текста сообщения для Telegram');
                    const telegramMessage = `🔔 Заказ звонка с сайта!\n\n👤 Имя: ${name}\n📧 Email: ${email || 'Не указан'}\n📞 Телефон: ${phone}\n\n💬 Комментарий: ${message || 'Без комментария'}`;
                    
                    Logger.info('Сообщение сформировано', {
                        длина: telegramMessage.length,
                        содержание: telegramMessage.substring(0, 100) + (telegramMessage.length > 100 ? '...' : '')
                    });
                    
                    // Токен бота и ID чата
                    const botToken = '7813140158:AAHm1-JG4KDjHTb83zNieLAyqy8-MEu6FwY';
                    const chatId = '-1001940374630';
                    
                    Logger.info('Используемые учетные данные Telegram', {
                        botToken: botToken.substring(0, 5) + '...' + botToken.substring(botToken.length - 5),
                        chatId
                    });
                    
                    // Изменяем состояние кнопки на время отправки
                    Logger.info('Изменение состояния кнопки отправки');
                    const submitButton = this.querySelector('.simple-submit-button');
                    
                    if (!submitButton) {
                        Logger.warning('Кнопка отправки не найдена по селектору .simple-submit-button');
                    } else {
                        const originalButtonText = submitButton.innerHTML;
                        Logger.info('Оригинальный текст кнопки сохранен', { текст: originalButtonText });
                        
                        Logger.info('Блокировка кнопки отправки и изменение текста');
                        submitButton.disabled = true;
                        submitButton.innerHTML = '<span>Отправка...</span><i class="fa fa-spinner fa-spin"></i>';
                    }
                    
                    Logger.groupEnd(); // Закрываем группу обработки данных формы
                    
                    // Отправляем сообщение в Telegram через API
                    Logger.groupStart('Отправка запроса в Telegram');
                    
                    Logger.network('Подготовка запроса к Telegram API', {
                        url: `https://api.telegram.org/bot${botToken.substring(0, 5)}***/sendMessage`,
                        метод: 'POST',
                        тип_данных: 'application/json'
                    });
                    
                    const startTime = performance.now();
                    
                    fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            chat_id: chatId,
                            text: telegramMessage
                        })
                    })
                    .then(response => {
                        const endTime = performance.now();
                        const requestTime = (endTime - startTime).toFixed(2);
                        
                        Logger.network(`Получен ответ от сервера (${requestTime} мс)`, {
                            статус: response.status,
                            статус_текст: response.statusText,
                            ok: response.ok
                        });
                        
                        if (!response.ok) {
                            Logger.warning('Получен неуспешный HTTP-статус, обработка ответа');
                            return response.json().then(errorData => {
                                Logger.error('Детали ошибки Telegram API', errorData);
                                throw new Error(`Ошибка HTTP: ${response.status}, Описание: ${errorData.description || 'Неизвестная ошибка'}`);
                            });
                        }
                        
                        Logger.success('Успешный HTTP-статус, парсинг JSON-ответа');
                        return response.json();
                    })
                    .then(data => {
                        Logger.success('Успешный разбор JSON-ответа', data);
                        
                        if (data.ok) {
                            Logger.success('Сообщение успешно отправлено в Telegram', {
                                message_id: data.result?.message_id,
                                chat_id: data.result?.chat?.id
                            });
                            
                            // Успешная отправка
                            alert('Сообщение успешно отправлено! Мы свяжемся с вами в ближайшее время.');
                            
                            Logger.info('Сброс формы');
                            form.reset();
                            
                            Logger.modal('Закрытие модального окна после успешной отправки');
                            closeSimpleModal(); // Закрываем модальное окно после успешной отправки
                        } else {
                            Logger.error('API вернул ошибку в JSON-ответе', data);
                            throw new Error('Ошибка бота Telegram: ' + (data.description || 'Неизвестная ошибка'));
                        }
                    })
                    .catch(error => {
                        Logger.error(`Произошла ошибка при отправке: ${error.message}`, {
                            стек: error.stack
                        });
                        
                        alert('Произошла ошибка при отправке сообщения. Пожалуйста, попробуйте позже или свяжитесь с нами другим способом.');
                    })
                    .finally(() => {
                        Logger.info('Завершение отправки (блок finally)');
                        
                        // Восстанавливаем кнопку в любом случае
                        if (submitButton) {
                            Logger.info('Восстановление состояния кнопки отправки');
                            submitButton.disabled = false;
                            submitButton.innerHTML = originalButtonText;
                        }
                        
                        Logger.groupEnd(); // Закрываем группу отправки запроса
                    });
                });
                
                Logger.success('Обработчик отправки формы успешно настроен');
            } else {
                Logger.error('Форма с ID "simple-callback-form" не найдена на странице');
            }
            
            Logger.groupEnd(); // Закрываем группу инициализации формы
        });
        
        // Функции для работы с модальным окном
        function closeSimpleModal() {
            Logger.modal('Вызвана функция закрытия модального окна');
            
            const modal = document.getElementById('simple-callback');
            const overlay = document.getElementById('simple-modal-overlay');
            
            Logger.modal('Поиск элементов модального окна', {
                modal: !!modal,
                overlay: !!overlay
            });
            
            if (modal) {
                Logger.modal('Скрытие модального окна');
                modal.style.display = 'none';
            } else {
                Logger.error('Элемент модального окна не найден (#simple-callback)');
            }
            
            if (overlay) {
                Logger.modal('Скрытие оверлея модального окна');
                overlay.style.display = 'none';
            } else {
                Logger.error('Элемент оверлея не найден (#simple-modal-overlay)');
            }
            
            Logger.modal('Модальное окно закрыто');
        }
        
        function openSimpleModal() {
            Logger.modal('Вызвана функция открытия модального окна');
            
            const modal = document.getElementById('simple-callback');
            const overlay = document.getElementById('simple-modal-overlay');
            
            Logger.modal('Поиск элементов модального окна', {
                modal: !!modal,
                overlay: !!overlay
            });
            
            if (modal) {
                Logger.modal('Отображение модального окна');
                modal.style.display = 'block';
            } else {
                Logger.error('Элемент модального окна не найден (#simple-callback)');
            }
            
            if (overlay) {
                Logger.modal('Отображение оверлея модального окна');
                overlay.style.display = 'block';
            } else {
                Logger.error('Элемент оверлея не найден (#simple-modal-overlay)');
            }
            
            Logger.modal('Модальное окно открыто');
        }
        
        // Поиск и настройка всех кнопок, которые открывают модальное окно
        document.addEventListener('DOMContentLoaded', function() {
            Logger.groupStart('Настройка кнопок открытия модального окна');
            
            const modalTriggers = document.querySelectorAll('[data-modal="simple-callback"]');
            Logger.info(`Найдено ${modalTriggers.length} триггеров модального окна`);
            
            modalTriggers.forEach((trigger, index) => {
                Logger.info(`Настройка триггера #${index + 1}`, {
                    элемент: trigger.tagName,
                    классы: trigger.className,
                    текст: trigger.textContent?.trim() || '[без текста]'
                });
                
                trigger.addEventListener('click', function(e) {
                    Logger.event(`Нажата кнопка открытия модального окна #${index + 1}`);
                    e.preventDefault();
                    openSimpleModal();
                });
            });
            
            // Настройка закрытия модального окна при клике на оверлей
            const overlay = document.getElementById('simple-modal-overlay');
            if (overlay) {
                Logger.info('Настройка закрытия модального окна при клике на оверлей');
                
                overlay.addEventListener('click', function(e) {
                    if (e.target === overlay) {
                        Logger.event('Зафиксирован клик по оверлею, закрытие модального окна');
                        closeSimpleModal();
                    }
                });
            }
            
            // Настройка закрытия модального окна по Escape
            Logger.info('Настройка закрытия модального окна по клавише Escape');
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    const modal = document.getElementById('simple-callback');
                    if (modal && modal.style.display === 'block') {
                        Logger.event('Нажата клавиша Escape, закрытие модального окна');
                        closeSimpleModal();
                    }
                }
            });
            
            Logger.groupEnd(); // Закрываем группу настройки кнопок
        });
        </script>
        
    
   
    <!-- ============================================= -->
    <!-- SCRIPTS С УЛУЧШЕННОЙ ПРОИЗВОДИТЕЛЬНОСТЬЮ       -->
    <!-- ============================================= -->
    <!-- Основные скрипты с defer для ускорения рендеринга -->

    <script src="yandex.js"></script>
    <script src="gift.js"></script>
    <!-- Оптимизированная загрузка скриптов второго приоритета -->
    <script>
      
   document.addEventListener('DOMContentLoaded', function() {
    // === МОДАЛЬНЫЕ ОКНА ===
    
    // Функция открытия модального окна заказа звонка
    window.openSimpleModal = function() {
        // Сначала закрываем окно цен, если оно открыто
        closePriceModal();
        
        // Открываем нужное модальное окно
        document.getElementById('simple-callback').style.display = 'block';
        document.getElementById('simple-modal-overlay').style.display = 'block';
        document.body.style.overflow = 'hidden'; // Блокируем прокрутку страницы
    };

    // Функция открытия модального окна с ценами
   

    // Функция закрытия модального окна заказа звонка
    window.closeSimpleModal = function() {
        document.getElementById('simple-callback').style.display = 'none';
        document.getElementById('simple-success').style.display = 'none';
        document.getElementById('simple-modal-overlay').style.display = 'none';
        document.body.style.overflow = ''; // Восстанавливаем прокрутку
    };


    // Функция отправки формы
    window.submitSimpleForm = function(form) {
        // Здесь код для отправки формы
        alert('Спасибо! Ваша заявка принята.');
        
        // После успешной отправки показываем окно успеха
        document.getElementById('simple-callback').style.display = 'none';
        document.getElementById('simple-success').style.display = 'block';
        
        return false;
    };

    // === ИНИЦИАЛИЗАЦИЯ ОБРАБОТЧИКОВ ===
    
    // Инициализация кнопок открытия модальных окон
    document.querySelectorAll('.popup-with-form, a[href="#callback"]').forEach(function(button) {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            openSimpleModal();
        });
    });
    
    // Инициализация кнопки с классом giguslugi-cta-button
    document.querySelectorAll('.giguslugi-cta-button').forEach(function(button) {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            // Сохраняем функциональность gtag
            if (typeof gtag === 'function') {
                gtag('event', 'click', {'event_category': 'button', 'event_label': 'consult_button'});
            }
            
            openSimpleModal();
        });
    });

    // Обработчик для клика по оверлею обычного модального окна
    document.getElementById('simple-modal-overlay').addEventListener('click', closeSimpleModal);
    
    // Закрытие по клавише Escape
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeSimpleModal();
        }
    });
});


    /**
 * ╔══════════════════════════════════════════════════════════════╗  
 * ║           ИНИЦИАЛИЗАЦИЯ ЯНДЕКС КАРТЫ И АНИМАЦИЙ              ║  
 * ╚══════════════════════════════════════════════════════════════╝  
 */

document.addEventListener('DOMContentLoaded', function() {
    // Анимация появления элементов при прокрутке
    initScrollAnimations();
    
    // Инициализация защиты контактных данных
    initContactProtection();
    
    // Загрузка Яндекс Карты
    loadYandexMap();
    
    // Инициализация маски для телефона
    initPhoneMask();
    
    // Обработка отправки формы
    initFormSubmit();
});

/**
 * Инициализирует анимации при прокрутке
 */
function initScrollAnimations() {
    const animateElements = [
        '.contact-form-container',
        '.map-container'
    ];
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate');
                observer.unobserve(entry.target);
            }
        });
    }, {
        threshold: 0.1
    });
    
    animateElements.forEach(selector => {
        document.querySelectorAll(selector).forEach(element => {
            observer.observe(element);
        });
    });
}

/**
 * Защита контактных данных от парсинга
 */
function initContactProtection() {
    // Декодирование и отображение email при клике
    document.querySelectorAll('.encoded-email').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const encodedEmail = this.getAttribute('data-email');
            const email = atob(encodedEmail);
            this.innerHTML = email;
            this.setAttribute('href', 'mailto:' + email);
            this.classList.remove('encoded-email');
        });
    });
    
    // Декодирование и переход по ссылкам соц.сетей при клике
    document.querySelectorAll('.social-link').forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            const encodedLink = this.getAttribute('data-link');
            const decodedLink = atob(encodedLink);
            window.open(decodedLink, '_blank');
        });
    });
}

/**
 * Загрузка Яндекс Карты
 */
function loadYandexMap() {
    // Проверяем, не загружена ли карта уже
    if (window.ymaps) {
        initYandexMap();
        return;
    }
    
    const script = document.createElement('script');
    script.src = "https://api-maps.yandex.ru/2.1/?apikey=YOUR_API_KEY&lang=ru_RU";
    script.async = true;
    
    script.onload = function() {
        initYandexMap();
    };
    
    document.body.appendChild(script);
}
    </script>
<style>
   /* Стили для всплывающего баннера */
.anketa-popup {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 20px;
  width: 320px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 5px 20px rgba(0, 0, 0, 0.2);
  z-index: 9999;
  border-top: 3px solid #fd7921;
  max-height: calc(100vh - 40px); /* Предотвращает выход за пределы экрана */
  overflow: auto; /* Добавляем прокрутку, если содержимое не помещается */
}

.anketa-popup.active {
  display: block;
  animation: anketa-slide-up 0.3s ease-out;
}

@keyframes anketa-slide-up {
  from { transform: translateY(20px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.anketa-popup-container {
  padding: 20px;
  position: relative;
}

.anketa-close {
  position: absolute;
  top: 10px;
  right: 10px;
  font-size: 20px;
  cursor: pointer;
  color: #999;
  width: 30px;
  height: 30px;
  line-height: 30px;
  text-align: center;
  border-radius: 50%;
}

.anketa-close:hover {
  background-color: #f0f0f0;
  color: #333;
}

.anketa-icon {
  text-align: center;
  margin-bottom: 15px;
}

.anketa-icon i {
  font-size: 40px;
  color: #fd7921;
  background-color: rgba(253, 121, 33, 0.1);
  width: 70px;
  height: 70px;
  line-height: 70px;
  border-radius: 50%;
}

.anketa-title {
  margin: 0 0 10px 0;
  color: #333;
  font-size: 18px;
  text-align: center;
}

.anketa-description {
  margin: 0 0 15px 0;
  color: #666;
  font-size: 14px;
  text-align: center;
}

.anketa-list {
  margin: 0 0 20px 0;
  padding-left: 10px;
  list-style-type: none;
}

.anketa-list li {
  margin-bottom: 10px;
  font-size: 14px;
  color: #333;
  display: flex;
  align-items: center;
}

.anketa-list li i {
  color: #4CAF50;
  margin-right: 8px;
  font-size: 14px;
}

.anketa-button {
  display: block;
  width: 100%;
  padding: 12px 0;
  background-color: #fd7921;
  color: white;
  text-align: center;
  text-decoration: none;
  border-radius: 5px;
  font-weight: bold;
  font-size: 16px;
  transition: background-color 0.3s;
}

.anketa-button:hover {
  background-color: #e66b17;
}

/* Улучшенный адаптив для мобильных устройств */
@media (max-width: 480px) {
  .anketa-popup {
    width: calc(100% - 40px); /* Ширина с отступами */
    max-width: 280px; /* Максимальная ширина */
    left: auto; /* Отменяем позиционирование слева */
    right: 20px;
    bottom: 20px;
    font-size: 0.9em; /* Уменьшаем размер текста */
  }
  
  .anketa-popup-container {
    padding: 15px; /* Уменьшаем внутренние отступы */
  }
  
  .anketa-icon {
    margin-bottom: 10px;
  }
  
  .anketa-icon i {
    font-size: 30px; /* Уменьшаем иконку */
    width: 60px;
    height: 60px;
    line-height: 60px;
  }
  
  .anketa-title {
    font-size: 16px;
    margin-bottom: 8px;
  }
  
  .anketa-description {
    font-size: 13px;
    margin-bottom: 10px;
  }
  
  .anketa-list {
    margin-bottom: 15px;
  }
  
  .anketa-list li {
    font-size: 13px;
    margin-bottom: 8px;
  }
  
  .anketa-button {
    padding: 10px 0;
    font-size: 14px;
  }
}

/* Дополнительная оптимизация для очень маленьких экранов */
@media (max-width: 320px) {
  .anketa-popup {
    max-width: 250px; /* Еще меньшая ширина */
    bottom: 15px;
    right: 15px;
  }
  
  .anketa-icon i {
    font-size: 25px;
    width: 50px;
    height: 50px;
    line-height: 50px;
  }
  
  .anketa-list {
    padding-left: 5px;
  }
}

    </style>
    
    <!-- HTML баннера -->
    <div id="anketa-popup" class="anketa-popup">
      <div class="anketa-popup-container">
        <span class="anketa-close">&times;</span>
        <div class="anketa-icon">
          <i class="fas fa-gift"></i>
        </div>
        <h3 class="anketa-title">Заполните анкету и получите подарок!</h3>
        <p class="anketa-description">Комплект материалов по цифровой безопасности для вашего бизнеса</p>
        <ul class="anketa-list">
          <li><i class="fas fa-check"></i> Чек-лист безопасности</li>
          <li><i class="fas fa-check"></i> PDF-гид по защите данных</li>
          <li><i class="fas fa-check"></i> Руководство по удаленной работе</li>
        </ul>
        <a href="bezopasniy-office.html" class="anketa-button">Заполнить анкету</a>
      </div>
    </div>
    
    <script>
    // Простой скрипт для показа и скрытия баннера
    document.addEventListener('DOMContentLoaded', function() {
      // Проверяем, находимся ли мы на странице анкеты
      if (window.location.href.indexOf('bezopasniy-office.html') !== -1) {
        return; // Не показываем баннер на странице анкеты
      }
      
      // Элементы баннера
      var popup = document.getElementById('anketa-popup');
      var closeBtn = document.querySelector('.anketa-close');
      
      // Проверяем, было ли закрытие недавно
      var lastClosed = localStorage.getItem('anketaPopupClosed');
      if (lastClosed) {
        var now = new Date().getTime();
        var closedTime = parseInt(lastClosed);
        
        // Если закрыли меньше 24 часов назад, не показываем
        if (now - closedTime < 24 * 60 * 60 * 1000) {
          return;
        }
      }
      
      // Показываем баннер через 3 секунды
      setTimeout(function() {
        popup.classList.add('active');
      }, 3000);
      
      // Обработчик закрытия
      closeBtn.addEventListener('click', function() {
        popup.classList.remove('active');
        localStorage.setItem('anketaPopupClosed', new Date().getTime());
      });
    });
    </script>
    <script>
        // Простой и надежный JavaScript для FAQ аккордеона
        document.addEventListener('DOMContentLoaded', function() {
          // Найдем все заголовки вопросов в FAQ
          var faqQuestions = document.querySelectorAll('.giguslugi-faq-item h4');
          
          // Обойдем каждый вопрос и добавим к нему обработчик событий
          faqQuestions.forEach(function(question) {
            // Инициализация: скрываем все ответы
            var parent = question.closest('.giguslugi-faq-item');
            var answer = parent.querySelector('[itemprop="acceptedAnswer"]');
            if (!parent.classList.contains('active')) {
              answer.style.display = 'none';
            }
            
            // Добавляем обработчик клика
            question.addEventListener('click', function(e) {
              e.preventDefault();
              
              // Получаем родительский элемент и блок с ответом
              var parent = this.closest('.giguslugi-faq-item');
              var answer = parent.querySelector('[itemprop="acceptedAnswer"]');
              
              // Переключаем класс active и видимость ответа
              if (parent.classList.contains('active')) {
                // Закрываем ответ
                parent.classList.remove('active');
                answer.style.display = 'none';
              } else {
                // Открываем ответ
                parent.classList.add('active');
                answer.style.display = 'block';
              }
            });
            
            // Доступность с клавиатуры
            question.setAttribute('tabindex', '0');
            question.setAttribute('role', 'button');
            question.setAttribute('aria-expanded', parent.classList.contains('active') ? 'true' : 'false');
            
            question.addEventListener('keydown', function(e) {
              if (e.key === 'Enter' || e.key === ' ') {
                e.preventDefault();
                this.click();
              }
            });
          });
        });
        </script>
        
</body>
</html>